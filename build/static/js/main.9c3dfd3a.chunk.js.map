{"version":3,"sources":["apis/Api2.jsx","apis/api.js","Components/Header/Header.jsx","Components/Front/Front.jsx","Components/Front2/Front2.jsx","utilies/Bsc_contract.js","Components/Front4/Front4.jsx","Components/Mint/ModelOpen.jsx","Components/Mint/Mint.jsx","Components/Footer/Footer.jsx","Components/Collection_main.jsx","Components/Benefits_main.jsx","Components/Mint_main.jsx","Components/Terms/Terms.jsx","Components/Privacy_Policy/Privacy_Policy.jsx","Components/BSC_Minting.jsx","Components/Create_sell_nft/Create_sell_nft.jsx","Components/Index_main.jsx","apis/signature.js","Components/Mint_Deatails/Mint_With_100.jsx","Components/Mint_Deatails/Mint_With_200.jsx","Components/Mint_Deatails/Mint_With_300.jsx","Components/Mint_Deatails/Mint_With_400.jsx","Components/Mint_Deatails/Mint_With_500.jsx","Components/Mint_Deatails/Mint_With_1000.jsx","Components/Mint_Deatails/Mint_With_2000.jsx","Components/Mint_Deatails/Mint_With_3000.jsx","Components/Mint_Deatails/Mint_With_4000.jsx","Components/Mint_Deatails/Mint_With_5000.jsx","Components/Mint_Deatails/Mint_With_10000.jsx","App.js","reportWebVitals.js","index.js"],"names":["accounts","isItConnected","getAccounts","web3","window","eth","console","log","loadWeb2","ethereum","Web3","enable","getChainId","err","netId","toString","loadWeb3","Header","NetId","useState","btnTxt","setBtTxt","getAccount","useRef","acc","myAcc","substring","length","useEffect","setInterval","className","Navbar","collapseOnSelect","expand","bg","variant","Container","to","Brand","src","alt","width","Toggle","Collapse","id","Nav","class","type","Link","href","Front","viewBox","xmlns","clipPathUnits","d","fill","height","Front2","wireNftContractAddress","wireNftContractAbi","inputs","internalType","name","stateMutability","anonymous","indexed","outputs","wireTokenAddress","wireTokenAbi","busdNftTokenAddress","busdNftTokenAbi","payable","constant","ULE_NFT_100","ULE_NFT_100_ABI","ULE_NFT_200","ULE_NFT_200_ABI","ULE_NFT_300","ULE_NFT_300_ABI","ULE_NFT_400","ULE_NFT_400_ABI","ULE_NFT_500","ULE_NFT_500_ABI","ULE_NFT_1000","ULE_NFT_1000_ABI","ULE_NFT_2000","ULE_NFT_2000_ABI","ULE_NFT_3000","ULE_NFT_3000_ABI","ULE_NFT_4000","ULE_NFT_4000_ABI","ULE_NFT_5000","ULE_NFT_5000_ABI","ULE_NFT_10000","ULE_NFT_10000_ABI","Front4","imageArray","setImageArray","setMyWalletLength","setNetId_set","allImagesNfts","simplleArray","ULE_NFT_100_OF","Contract","ULE_NFT_200_OF","ULE_NFT_300_OF","ULE_NFT_400_OF","ULE_NFT_500_OF","ULE_NFT_1000_OF","ULE_NFT_2000_OF","ULE_NFT_3000_OF","ULE_NFT_4000_OF","ULE_NFT_5000_OF","ULE_NFT_10000_OF","axios","get","mintingWirePrice","data","usdperunit","parseFloat","toFixed","methods","WalletOfOwner","call","walletOfOwner100","Price100","walletLength","i","res","imageUrl","config","url","dna","token_id","num","walletOfOwner200","Price200","walletLength200","val","url_num","walletOfOwner300","Price300","walletLength300","walletOfOwner400","Price400","walletLength400","walletOfOwner500","Price500","walletLength500","walletOfOwner1000","Price1000","walletLength1000","walletOfOwner2000","Price2000","walletLength2000","walletOfOwner3000","Price3000","walletLength3000","walletOfOwner4000","Price4000","walletLength4000","walletOfOwner5000","Price5000","walletLength5000","walletOfOwner10000","Price10000","walletLength10000","map","items","idex","ModelOpen","setShowModal","showModal","subMitFunction","Mint","chainid_id","toast","error","value","setValue","setMintPriceBnb","setMintPriceBUSD","mintPriceWire","setmintPriceWire","setButtonOne","btnTwo","setButtonTwo","setButtonThree","inputdatahere","setinputdatahere","showModal2","setShowModal2","showModal3","setShowModal3","myMintBNB","nftContractOf","MaxLimitPerTransaction","totalnft","maxsupply","maxSupply","totalSupply","ttlSupply","paused","maxLimitprTransaction","Valueinbnb","mintingbnbPrice","totalMintingPriceBNB","getdata","price","iswhitelist","parseInt","mint_with_BNB","send","from","hash","success","transactionHash","post","uid","address","nft","token","txn","myMintWire","wireContractOf","balanceOf","userBusdBalance","ValueinULE","utils","fromWei","totalMintingPriceWire","toWei","approve","data_value","mint_with_token","myMintBUSD","busdContractOf","MinitngPricein_token","mintingBusdPrice","totalMintingPriceBusd","mint_with_BUSD","postapi","getMydata","Modal","show","size","centered","Body","onChange","e","target","onClick","style","marginLeft","Footer","color","Collection_main","Mint_main","chainid","Terms","Privacy_Policy","BSC_Minting","Create_sell_nft","Index_main","getSignatureTest","contract","user","sigdataArr","provider","ethers","providers","JsonRpcProvider","getBlockNumber","blockNumber","getBlock","nonce","timestamp","push","solidityKeccak256","toLowerCase","signingKey","SigningKey","process","deployTx","signDigest","signature","joinSignature","Mint_With_100","ImgeURL","setImgeURL","uleContractOf","maxBatchSize","getBalance","accountBalance","collectionSize","mintingULEPrice","mintingBNBPrice","LastIndex_array","slice","usd","nftcontract","info","backgroundColor","Mint_With_200","Mint_With_300","Mint_With_400","Mint_With_500","Mint_With_1000","walletOfOwner","Mint_With_2000","Mint_With_3000","Mint_With_4000","Mint_With_5000","Mint_With_10000","App","modalShow","setModalShow","setchainid","myvalue","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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IA,MAAM,kBAAV,UACE,sCACA,6BAAI,mBAAGA,MAAM,gCACb,sDAQd,cAAC,GAAD,MAKL,C,cCVcqN,OA9Bf,WACI,OACI,8BACY,qBAAKrO,UAAU,aAAf,SACA,sBAAKA,UAAU,YAAf,UACI,kDACA,gDAAyB,uBACzB,8BAAG,6DAAH,wMAEA,8CACA,uuBAEA,0DACA,2NAA6L,uBAA7L,yhBAGA,mDACA,gUAAkS,uBAAlS,4rBAC6rB,uBAD7rB,2VAIA,iEACA,69BAMvB,E,OC5Bc,SAASsO,KACpB,OACI,8BAEI,qBAAKtO,UAAU,mBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,gDACA,8JACA,oFACA,kqBAEA,qBAAIA,UAAU,WAAd,UACI,sIACA,sIACA,4IACA,wLAEJ,6DACA,idACA,qBAAIA,UAAU,WAAd,UACI,oHACA,uHACA,mHAEJ,gZACA,2DACA,g/BACA,iDACA,iRACA,sEACA,+aACA,gEACA,gsBACA,2JACA,2CACA,qcACA,wDACA,wTACA,sFACA,gwCACA,mFACA,swBACA,4CACA,+9BACA,sDACA,uyCACA,8CACA,gUACA,qBAAIA,UAAU,WAAd,UACI,iFACA,iIACA,mEACA,yFACA,+QACA,wKACA,8OACA,kMACA,0SACA,sIACA,4MACA,iHACA,sKACA,+RACA,+GACA,kEACA,8PACA,8cAEJ,0MACA,gDAAoB,ueACpB,mwBACA,uYACA,mdACA,mPACA,wZACA,0RAEA,2aAEA,6SACA,kVACA,gEACA,kTACA,wDACA,wmBACA,4FACA,6hBACA,+EACA,yQACA,iDACA,kuDACA,6CACA,0kDACA,moBACA,mZACA,0tBAEA,8KACA,oDACA,4DACA,6CACA,4UACA,2CACA,gQACA,0EACA,4MACA,gFACA,yyBACA,qFACA,sQACA,yIACA,ulBACA,yDACA,u3BACA,8bACA,sRACA,6WACA,8DACA,+QACA,kEACA,yDACA,4pBACA,6CACA,keACA,8CACA,6VACA,0CACA,mMACA,+CACA,+uBASnB,CC/Gc,SAASuO,KACpB,OACI,gCACI,qBAAKvN,MAAM,kBAAX,SACI,qBAAKhB,U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","file":"static/js/main.9c3dfd3a.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\nlet isItConnected = false;\r\n\r\n\r\n\r\n// const networks = {\r\n//   Mumbai: {\r\n//     chainId: `0x${Number(137).toString(16)}`,\r\n//     chainName: \"Mumbai\",\r\n//     nativeCurrency: {\r\n//       name: \"Mumbai\",\r\n//       symbol: \"MATIC\",\r\n//       decimals: 18,\r\n//     },\r\n//     rpcUrls: [\r\n//       \"https://matic-mumbai.chainstacklabs.com\",\r\n//       \"https://rpc.polycat.finance\",\r\n\r\n//       \"https://rpc-mainnet.maticvigil.com\",\r\n\r\n//       \"https://matic-mainnet.chainstacklabs.com\",\r\n\r\n//       \"https://matic-mainnet-full-rpc.bwarelabs.com\",\r\n\r\n//       \"https://rpc-mainnet.matic.quiknode.pro\"\r\n\r\n//     ],\r\n//     blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\r\n//   },\r\n// };\r\n// const changeNetwork = async ({ networkName }) => {\r\n//   try {\r\n//     if (!window.ethereum) throw new Error(\"No crypto wallet found\");\r\n//     await window.ethereum.request({\r\n//       method: \"wallet_addEthereumChain\",\r\n//       params: [\r\n//         {\r\n//           ...networks[networkName],\r\n//         },\r\n//       ],\r\n//     });\r\n//   } catch (err) {\r\n//     console.log(\"not found\");\r\n//   }\r\n// };\r\n// const handleNetworkSwitch = async (networkName) => {\r\n//   await changeNetwork({ networkName });\r\n// };\r\nlet accounts;\r\nconst getAccounts = async () => {\r\n  const web3 = window.web3;\r\n  try {\r\n    accounts = await web3.eth.getAccounts();\r\n    return accounts;\r\n  } catch (error) {\r\n    console.log(\"Error while fetching acounts: \", error);\r\n    return null;\r\n  }\r\n};\r\nexport const disconnectWallet = async () => {\r\n  await window.ethereum.request({\r\n    method: \"eth_requestAccounts\",\r\n    params: [{ eth_accounts: {} }],\r\n  });\r\n  console.log(\"disconnect\");\r\n};\r\nexport const loadWeb2 = async () => {\r\n  try {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      await window.web3.eth.getChainId((err, netId) => {\r\n        // console.log(\"networkId==>\", netId);\r\n        switch (netId.toString()) {\r\n          case \"137\":\r\n            isItConnected = true;\r\n            break;\r\n          default:\r\n            // handleNetworkSwitch(\"Mumbai\");\r\n            isItConnected = false;\r\n        }\r\n      });\r\n      if (isItConnected == true) {\r\n        let accounts = await getAccounts();\r\n        return accounts[0];\r\n      } else {\r\n        let res = \"Wrong Network\";\r\n        return res;\r\n      }\r\n    } else {\r\n      let res = \"No Wallet\";\r\n      return res;\r\n    }\r\n  } catch (error) {\r\n    let res = \"No Wallet\";\r\n    return res;\r\n  }\r\n};","import Web3 from \"web3\";\r\nlet isItConnected = false;\r\n// const networks = {\r\n//   bsc: {\r\n//     chainId: `0x${Number(56).toString(16)}`,\r\n//     chainName: \"Binance smart chain\",\r\n//     nativeCurrency: {\r\n//       name: \"BSC\",\r\n//       symbol: \"BNB\",\r\n//       decimals: 18,\r\n//     },\r\n//     rpcUrls: [\r\n//       \"https://bsc-dataseed1.binance.org\",\r\n//       \"https://bsc-dataseed2.binance.org\",\r\n//       \"https://bsc-dataseed3.binance.org\",\r\n//       \"https://bsc-dataseed4.binance.org\",\r\n//       \"https://bsc-dataseed1.defibit.io\",\r\n//       \"https://bsc-dataseed2.defibit.io\",\r\n//       \"https://bsc-dataseed3.defibit.io\",\r\n//       \"https://bsc-dataseed4.defibit.io\",\r\n//       \"https://bsc-dataseed1.ninicoin.io\",\r\n//       \"https://bsc-dataseed2.ninicoin.io\",\r\n//       \"https://bsc-dataseed3.ninicoin.io\",\r\n//       \"https://bsc-dataseed4.ninicoin.io\",\r\n//       \"wss://bsc-ws-node.nariox.org\",\r\n//     ],\r\n//     blockExplorerUrls: [\"https://bscscan.com\"],\r\n//   },\r\n// };\r\n// const changeNetwork = async ({ networkName }) => {\r\n//   try {\r\n//     if (!window.ethereum) throw new Error(\"No crypto wallet found\");\r\n//     await window.ethereum.request({\r\n//       method: \"wallet_addEthereumChain\",\r\n//       params: [\r\n//         {\r\n//           ...networks[networkName],\r\n//         },\r\n//       ],\r\n//     });\r\n//   } catch (err) {\r\n//     console.log(\"not found\");\r\n//   }\r\n// };\r\n// const handleNetworkSwitch = async (networkName) => {\r\n//   await changeNetwork({ networkName });\r\n// };\r\nlet accounts;\r\nconst getAccounts = async () => {\r\n  const web3 = window.web3;\r\n  try {\r\n    accounts = await web3.eth.getAccounts();\r\n    return accounts;\r\n  } catch (error) {\r\n    console.log(\"Error while fetching acounts: \", error);\r\n    return null;\r\n  }\r\n};\r\nexport const disconnectWallet = async () => {\r\n  await window.ethereum.request({\r\n    method: \"eth_requestAccounts\",\r\n    params: [{ eth_accounts: {} }],\r\n  });\r\n  console.log(\"disconnect\");\r\n};\r\nexport const loadWeb3 = async () => {\r\n  try {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      await window.web3.eth.getChainId((err, netId) => {\r\n        // console.log(\"networkId==>\", netId);\r\n        switch (netId.toString()) {\r\n          case \"56\":\r\n            isItConnected = true;\r\n            break;\r\n          default:\r\n            // handleNetworkSwitch(\"bsc\");\r\n            isItConnected = false;\r\n        }\r\n      });\r\n      if (isItConnected == true) {\r\n        let accounts = await getAccounts();\r\n        return accounts[0];\r\n      } else {\r\n        let res = \"Wrong Network\";\r\n        return res;\r\n      }\r\n    } else {\r\n      let res = \"No Wallet\";\r\n      return res;\r\n    }\r\n  } catch (error) {\r\n    let res = \"No Wallet\";\r\n    return res;\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadWeb2 } from \"../../apis/Api2\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\nimport Web3 from \"web3\";\r\n\r\nexport default function Header() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n  const selectoption = useRef();\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.ethereum.enable();\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      // console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n    let acc;\r\n\r\n    if (NetId == 56) {\r\n      acc = await loadWeb3();\r\n    } else {\r\n      acc = await loadWeb2();\r\n    }\r\n\r\n    setBtTxt(acc);\r\n    // console.log(\"ACC=\", acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getAccount();\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"maina\">\r\n        <Navbar\r\n          className=\"Headera\"\r\n          collapseOnSelect\r\n          expand=\"xl\"\r\n          bg=\"black\"\r\n          variant=\"dark\"\r\n        >\r\n          <Container>\r\n            <Link to=\"/\">\r\n              <Navbar.Brand className=\"pic\">\r\n                <img src=\"logoyule.png\" alt=\"\" width=\"100%\" />\r\n              </Navbar.Brand>\r\n            </Link>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"ms-auto nav_in_responsive \">\r\n                <div class=\"dropdown ms-2 mt-2\">\r\n                  <button\r\n                    class=\"btn btn-secondary dropdown-toggle select_main\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenuButton1\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Mint\r\n                  </button>\r\n                  <ul\r\n                    class=\"dropdown-menu\"\r\n                    aria-labelledby=\"dropdownMenuButton1\"\r\n                  >\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_100\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 100 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_200\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 200 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_300\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 300 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_400\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 400 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_500\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 500 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_1000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 1000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_2000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 2000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_3000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 3000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_4000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 4000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_5000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 5000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a class=\"dropdown-item\">\r\n                        {\" \"}\r\n                        <Link to=\"Mint_With_10000\" className=\"text-d\">\r\n                          {\" \"}\r\n                          Mint With 10000 USD\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                    {/* <li>\r\n                      <a class=\"dropdown-item\">\r\n                        <Link to=\"/Main_polygon\" className=\"text-d\">\r\n                          {\" \"}\r\n                          <img src=\"polygon.png\" alt=\"\" /> Polygon\r\n                        </Link>\r\n                      </a>\r\n                    </li> */}\r\n                  </ul>\r\n                </div>\r\n\r\n                <Nav.Link className=\"hzn\" href=\"#collection\">\r\n                  <Link\r\n                    to=\"/Collection_main\"\r\n                    className=\"link_text btn btna_navbar_here\"\r\n                  >\r\n                    Collection\r\n                  </Link>\r\n                </Nav.Link>\r\n\r\n                <div className=\"asl\">\r\n                  <button className=\"btn btna_navbar_herea\">{btnTxt}</button>\r\n                </div>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Front.css\";\n\n// import \"./styles.css\";\nimport { EffectFlip, Pagination, Navigation } from \"swiper\";\nexport default function Front() {\n  return (\n    <div>\n      <section\n        id=\"about\"\n        class=\"relative first pb-10 pt-20 md:pt-32 lg:h-[88vh]\"\n      >\n        <picture class=\"pointer-events-none absolute inset-x-0 top-0 -z-10 dark:hidden\">\n          <img src=\"gradient.jpg\" alt=\"gradient\" />\n        </picture>\n        <picture class=\"pointer-events-none absolute inset-x-0 top-0 -z-10 hidden dark:block\">\n          <img src=\"gradient_dark.jpg\" alt=\"gradient dark\" />\n        </picture>\n        <div class=\"container head_div h-full\">\n          <div class=\"grid h-full items-center gap-4 md:grid-cols-12\">\n            <div class=\"col-span-6 flex h-full flex-col items-center justify-center py-10 md:items-start md:py-20 xl:col-span-4\">\n              <h1 class=\"text-jacarta-700 font-display mb-6  text-5xl dark:text-white md:text-left lg:text-6xl xl:text-7xl\">\n                Buy, sell and collect NFTs.\n              </h1>\n              <p class=\"txt_white mb-8 text-lg md:text-left\">\n                The world's largest digital marketplace for crypto collectibles\n                and non-fungible tokens\n              </p>\n            </div>\n\n            <div class=\"col-span-6 xl:col-span-8 hero_div\">\n              <div class=\"relative text-center md:pl-8 md:text-right\">\n                <svg\n                  viewBox=\"0 0 200 200\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  class=\"mt-8 hero inline-block w-72 rotate-[8deg] sm:w-full lg:w-[24rem] xl:w-[35rem]\"\n                >\n                  <defs className=\"hero\">\n                    <clipPath id=\"clipping\" clipPathUnits=\"userSpaceOnUse\">\n                      <path\n                        d=\"\n                                                M 0, 100\n                                                C 0, 17.000000000000004 17.000000000000004, 0 100, 0\n                                                S 200, 17.000000000000004 200, 100\n                                                183, 200 100, 200\n                                                0, 183 0, 100\n                                                \"\n                        fill=\"#9446ED\"\n                      ></path>\n                    </clipPath>\n                  </defs>\n                  <g clip-path=\"url(#clipping)\">\n                    <image\n                      href=\"hero.jpg\"\n                      className=\"\"\n                      width=\"200\"\n                      height=\"200\"\n                      clip-path=\"url(#clipping)\"\n                    ></image>\n                  </g>\n                </svg>\n                <img\n                  src=\"3D_elements.png\"\n                  alt=\"\"\n                  class=\"animate-fly hero2 absolute top-0 md:-right-[10%]\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {/* <div className=\"first\">\n        <div className=\"container\">\n          <div className=\"row front_ro\">\n            <div className=\"col-md-6 \">\n              <h1 className=\"head\">Buy, sell and collect NFTs.</h1>\n              <p className=\"head2\">\n                The world's largest digital marketplace for crypto collectibles\n                and non-fungible tokens\n              </p>\n            </div>\n            <div className=\"col-md-1 col-12\"></div>\n            <div className=\"col-md-5 col-12 \">\n              <img src=\"hero.jpg\" alt=\"\" />\n              <img className=\"emg_2\" src=\"3D_elements.png\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport \"./Front2.css\";\r\n\r\nexport default function Front2() {\r\n  return (\r\n    <div>\r\n      <div class=\"wallet-area section-padding-100-50\">\r\n        <div class=\"container\">\r\n          <div class=\"row benefits\">\r\n            <div class=\"col-12 text-center\">\r\n              <h1 class=\"heading-title\">BENEFITS OF YULE CLUB NFTs</h1>\r\n              <p className=\"kami\">\r\n              Holders of YULE NFTs will get exclusive membership to YULE club a private members only club in the metaverse\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-lg-3 mt-5 aos-init\">\r\n              <div class=\"single-wallet-area two\">\r\n                {/* <!-- <div class=\"wallet-image\">\r\n                            <img src=\"img/icon-img/16.png\" alt=\"\">\r\n                        </div> --> */}\r\n\r\n                <div class=\"wallet-content-text\">\r\n                  {/* <h4>\r\n                    <a href=\"#\">Own the full commercial rights</a>\r\n                  </h4> */}\r\n\r\n                  <h1>Own the full commercial rights</h1>\r\n                  <p>\r\n                    NFTs prove ownership of a unique digital asset like art,\r\n                    music, collectibles, videos, or anything else with\r\n                    blockchain technology, if you buy a physical painting, you\r\n                    know it’s real because you see the artist’s signature on the\r\n                    canvas. Somebody can photocopy the painting, but they don’t\r\n                    own it — you do. Before NFTs, digital assets were like\r\n                    photocopies: When you buy a YULE Club NFT, the artwork is\r\n                    yours to keep or use in advertising, Whether you plan to\r\n                    sell it or not.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6  col-lg-3 mt-5 aos-init\">\r\n              <div class=\"single-wallet-area two\">\r\n                <div class=\"wallet-content-text div_explor\">\r\n                  {/* <h4>\r\n                    <a href=\"#\">Explore the Metaverse with us</a>\r\n                  </h4> */}\r\n                  <h1>EXPLORE THE YULE nft's WITH US</h1>\r\n                  <p>\r\n                    The YULE nft's is an online, three-dimensional universe that\r\n                    combines multiple virtual spaces. It can be compared to a\r\n                    future version of the internet. With metaverse, users will\r\n                    be able to collaborate, meet, play games, and socialize in\r\n                    these 3D spaces. By joining the YULE Club, you will have\r\n                    access to every metaverse we enter. Plus, there will be\r\n                    additional perks within our metaverse Private members club\r\n                    for YULE Club NFT holders.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 col-lg-3 mt-5 aos-init\">\r\n              <div class=\"single-wallet-area two\">\r\n                <div class=\"wallet-content-text div_xplor\">\r\n                  <h1>\r\n                    Display art in high resolution\r\n                  </h1>\r\n                  <p class=\"\">\r\n                    An YULE nft's token has metadata encoded permanently on the\r\n                    blockchain in a format that is \"non fungible\", it includes a\r\n                    URI which points to a unique JPEG, a piece of art which is\r\n                    the visual representation of this token, All YULE Club NFTs\r\n                    are available as high-resolution jpegs, which allows you to\r\n                    print a high-quality physical copy or display it on screen.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-lg-3 mt-5 aos-init\">\r\n              <div class=\"single-wallet-area two\">\r\n                <div class=\"wallet-content-text div_display\">\r\n                  <h1>\r\n                    Be part of a global community\r\n                  </h1>\r\n                  <p class=\"\">\r\n                    We are on a journey to create the next generation of the\r\n                    internet that will have a more decentralized architecture,\r\n                    giving control back to users, be a part of a global\r\n                    community that supports and empowers each other as we embark\r\n                    on this thrilling Metaverse journey.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const wireNftContractAddress =\r\n  \"0xEA83372466969f0a962Ee5d5A385753138FDfBEd\";\r\n\r\nexport const wireNftContractAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_name\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_symbol\",\r\n        type: \"string\",\r\n      },\r\n      {\r\n        internalType: \"contract IBEP20\",\r\n        name: \"_Token\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"contract IBEP20\",\r\n        name: \"_BUSD\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"contract IPancakePair\",\r\n        name: \"_bnbtobusd\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"contract IPancakePair\",\r\n        name: \"_ULEtobnblp\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BUSD\",\r\n    outputs: [\r\n      {\r\n        internalType: \"contract IBEP20\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BUSDtobnb\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BnbtoBusd\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ClaimBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ClaimBUSD\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Claimtoken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"MaxLimitPerTransaction\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"MinitngPricein_token\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SetMinitngPricein_Token\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SetWhitelistMinitngPricein_BUSD\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SetWhitelistMinitngPricein_Token\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SetWhitelistMintingPricein_BNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Token\",\r\n    outputs: [\r\n      {\r\n        internalType: \"contract IBEP20\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULEtobnb\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULEtobnblp\",\r\n    outputs: [\r\n      {\r\n        internalType: \"contract IPancakePair\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ValueinULE\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Valueinbnb\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WhitelistMinitngPricein_BUSD\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WhitelistMinitngPricein_token\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WhitelistMintingPricein_BNB\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Whitelist_MaxLimitPerTransaction\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"addressMintedBalance\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"baseURI\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"bnbbusdlp\",\r\n    outputs: [\r\n      {\r\n        internalType: \"contract IPancakePair\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"bnbtoULE\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"getApproved\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"iswhitelist\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxsupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_count\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"mint_with_BNB\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_count\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"mint_with_BUSD\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_count\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"mint_with_token\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"mintedNFTs\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"notRevealedUri\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"one$toULE\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"ownerOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"pausedminting\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"pricetime\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"reveal\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"revealed\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"_data\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"approved\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_newBaseURI\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setBaseURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setMaxLimitPerTransaction\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setMaxSupply\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_notRevealedURI\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setNotRevealedURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"_state\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setRevealed\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"setWhitelist_MaxLimitPerTransaction\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_newbaseExtension\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setbaseExtension\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"_newnotRevealedUri\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    name: \"setnotRevealedUri\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_addr\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"_state\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    name: \"setwhitelist\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"bytes4\",\r\n        name: \"interfaceId\",\r\n        type: \"bytes4\",\r\n      },\r\n    ],\r\n    name: \"supportsInterface\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"index\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"tokenURI\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"unpaused\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_owner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"walletOfOwner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256[]\",\r\n        name: \"\",\r\n        type: \"uint256[]\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdraw\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdrawBUSDtoken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"_addr\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdrawothertoken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"withdrawtoken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport const wireTokenAddress = \"0x804fE2C11510CFcCE6ECab6CBaAAFb4439005f60\";\r\nexport const wireTokenAbi = [\r\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" }],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_value\", type: \"uint256\" }],\r\n    name: \"burn\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"subtractedValue\", type: \"uint256\" },\r\n    ],\r\n    name: \"decreaseAllowance\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"addedValue\", type: \"uint256\" },\r\n    ],\r\n    name: \"increaseAllowance\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"sender\", type: \"address\" },\r\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport const busdNftTokenAddress = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\r\nexport const busdNftTokenAbi = [\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"to\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: \"uint256\",\r\n        name: \"value\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"_decimals\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint8\",\r\n        name: \"\",\r\n        type: \"uint8\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"_name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"_symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"allowance\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"balanceOf\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"burn\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"decimals\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint8\",\r\n        name: \"\",\r\n        type: \"uint8\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"subtractedValue\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"decreaseAllowance\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"getOwner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"spender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"addedValue\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"increaseAllowance\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"mint\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [\r\n      {\r\n        internalType: \"string\",\r\n        name: \"\",\r\n        type: \"string\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transfer\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"sender\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"address\",\r\n        name: \"recipient\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"amount\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport const ULE_NFT_100 = \"0xFFF00FC15A9a09737De6F8196bc313052Bf0C50F\";\r\nexport const ULE_NFT_100_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_currentIndex\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangeStartingINdex\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"currentIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_200 = \"0xd28E84e862A1DE13A9fCB35DF1c94d9Fe46D088A\";\r\nexport const ULE_NFT_200_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_currentIndex\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangeStartingINdex\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"currentIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_300 = \"0xa709C55d4951EFfe00b1795433338d1d267CcC70\";\r\nexport const ULE_NFT_300_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_currentIndex\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangeStartingINdex\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"currentIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_400 = \"0x650a27b7f93CB95f1A78591A1Ac9F1cdB263ae37\";\r\nexport const ULE_NFT_400_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_currentIndex\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangeStartingINdex\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"currentIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\nexport const ULE_NFT_500 = \"0x0D4C5B96cFF49a633184a69787AdE3B3639b97c3\";\r\nexport const ULE_NFT_500_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_currentIndex\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangeStartingINdex\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"currentIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_1000 = \"0xD7d104a4D223e1B65279548cC3b8d113Fc6736dC\";\r\nexport const ULE_NFT_1000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_2000 = \"0xA1bfd214D9c30B6309437E776F10e826Cf979c11\";\r\nexport const ULE_NFT_2000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\nexport const ULE_NFT_3000 = \"0x23DDBc1D61228234d9462E9680C1460C56982C5c\";\r\nexport const ULE_NFT_3000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_4000 = \"0x8a6e67acf3B721A76e3098D3963f6e4034D3052C\";\r\nexport const ULE_NFT_4000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_5000 = \"0xe43DD34FB38B58cb5Ecb38ff700cd4062F6c444A\";\r\nexport const ULE_NFT_5000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const ULE_NFT_10000 = \"0x02f835bB2ac8199DE8132075Bd41020bd6a2b060\";\r\nexport const ULE_NFT_10000_ABI = [\r\n  {\r\n    inputs: [\r\n      { internalType: \"contract IERC20\", name: \"_ULETOken\", type: \"address\" },\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Router\",\r\n        type: \"address\",\r\n      },\r\n      { internalType: \"address\", name: \"_LpReceiver_\", type: \"address\" },\r\n      { internalType: \"address\", name: \"_BNBReceiver\", type: \"address\" },\r\n      { internalType: \"address\", name: \"signer_\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"approved\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Approval\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"owner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"operator\",\r\n        type: \"address\",\r\n      },\r\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"ApprovalForAll\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"previousOwner\",\r\n        type: \"address\",\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: \"address\",\r\n        name: \"newOwner\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"OwnershipTransferred\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Paused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n      {\r\n        indexed: true,\r\n        internalType: \"uint256\",\r\n        name: \"tokenId\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"Transfer\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: \"address\",\r\n        name: \"account\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"Unpaused\",\r\n    type: \"event\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"BNBReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_maxBatchSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"BatchSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"PoolPercentage_\", type: \"uint256\" },\r\n    ],\r\n    name: \"ChangePoolPercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_collectionSize\", type: \"uint256\" },\r\n    ],\r\n    name: \"CollectionSize\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"LpReceiver\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_ULEtokens\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"_nonce\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"signature\", type: \"bytes\" },\r\n    ],\r\n    name: \"Mint\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Pause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolBNBamount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"PoolPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"Router\",\r\n    outputs: [\r\n      { internalType: \"contract IPancakeRouter01\", name: \"\", type: \"address\" },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"contract IPancakeRouter01\",\r\n        name: \"_Raddress\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"RouterAddress\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"SwapandLiquifyCount_\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"SWAPCondition\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SWAPTokenPercentage\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"_tokens\", type: \"uint256\" }],\r\n    name: \"Swap\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"SwapandLiquifyCount\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"ULE\",\r\n    outputs: [{ internalType: \"contract IERC20\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"UnPause\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"BNBReceiver_\", type: \"address\" },\r\n    ],\r\n    name: \"UpdateBNBReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"LpReceiver_\", type: \"address\" }],\r\n    name: \"UpdateLpReceiver\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"_SWAPTokenPercentage\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    name: \"UpdatePercentage\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"WETH\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\r\n    name: \"WalletOfOwner\",\r\n    outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\r\n      { internalType: \"uint256\", name: \"half\", type: \"uint256\" },\r\n    ],\r\n    name: \"addLiquidity\",\r\n    outputs: [],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"approve\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n    name: \"balanceOf\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"collectionSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"count\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"getApproved\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n    ],\r\n    name: \"isApprovedForAll\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"maxBatchSize\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"name\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"nextOwnerToExplicitlySet\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"owner\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"ownerOf\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"paused\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"prefixURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"renounceOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\r\n    ],\r\n    name: \"safeTransferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\r\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\r\n    ],\r\n    name: \"setApprovalForAll\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"string\", name: \"_uri\", type: \"string\" }],\r\n    name: \"setPrefixURI\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"signer\",\r\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\r\n    name: \"supportsInterface\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      { internalType: \"address\", name: \"token\", type: \"address\" },\r\n    ],\r\n    name: \"swapExactETHForToken\",\r\n    outputs: [\r\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"swapExactTokenForETH\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"symbol\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n    name: \"toString\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"pure\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\r\n    name: \"tokenByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\r\n    ],\r\n    name: \"tokenOfOwnerByIndex\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\r\n    name: \"tokenURI\",\r\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n    name: \"totalPublicMinted\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: \"totalSupply\",\r\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"from\", type: \"address\" },\r\n      { internalType: \"address\", name: \"to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\r\n    ],\r\n    name: \"transferFrom\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\r\n    name: \"transferOwnership\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n    name: \"usedHash\",\r\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_to\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"amonut\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawBNB\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: \"address\", name: \"_tokenAddress\", type: \"address\" },\r\n      { internalType: \"uint256\", name: \"_tokenAmount\", type: \"uint256\" },\r\n    ],\r\n    name: \"withdrawToken\",\r\n    outputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"function\",\r\n  },\r\n  { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { loadWeb2 } from \"../../apis/Api2\";\nimport { loadWeb3 } from \"../../apis/api\";\nimport Web3 from \"web3\";\n\nimport \"./Front4.css\";\nimport {\n  ULE_NFT_100,\n  ULE_NFT_1000,\n  ULE_NFT_10000,\n  ULE_NFT_10000_ABI,\n  ULE_NFT_1000_ABI,\n  ULE_NFT_100_ABI,\n  ULE_NFT_200,\n  ULE_NFT_2000,\n  ULE_NFT_2000_ABI,\n  ULE_NFT_200_ABI,\n  ULE_NFT_300,\n  ULE_NFT_3000,\n  ULE_NFT_3000_ABI,\n  ULE_NFT_300_ABI,\n  ULE_NFT_400,\n  ULE_NFT_4000,\n  ULE_NFT_4000_ABI,\n  ULE_NFT_400_ABI,\n  ULE_NFT_500,\n  ULE_NFT_5000,\n  ULE_NFT_5000_ABI,\n  ULE_NFT_500_ABI,\n} from \"../../utilies/Bsc_contract\";\n\nexport default function Front4() {\n  let [btnTxt, setBtTxt] = useState();\n  let [imageArray, setImageArray] = useState([]);\n  let [initialLimit, setInitialLimit] = useState([]);\n  let [finalLimit, setFinalLimit] = useState(12);\n  let [NFT200, setNFT200] = useState();\n  let [NFT300, setNFT300] = useState();\n  let [NFT400, setNFT400] = useState();\n  let [NFT500, setNFT500] = useState();\n  let [NFT1000, setNFT1000] = useState();\n  let [NFT2000, setNFT2000] = useState();\n  let [NFT3000, setNFT3000] = useState();\n  let [NFT4000, setNFT4000] = useState();\n  let [NFT5000, setNFT5000] = useState();\n  let [NFT10000, setNFT10000] = useState();\n  let [mywalletLength, setMyWalletLength] = useState();\n\n  let [pageNumber, setPageNumber] = useState(1);\n  let [totalPages, setTotalPages] = useState(1);\n  let [NetId_set, setNetId_set] = useState();\n\n  var NetId;\n  const getAccount = async () => {\n    const web3 = window.web3;\n\n    window.web3 = new Web3(window.ethereum);\n\n    await window.web3.eth.getChainId((err, netId) => {\n      NetId = netId;\n      setNetId_set(NetId);\n    });\n    let acc;\n\n    if (NetId == 56) {\n      acc = await loadWeb3();\n    } else {\n      acc = await loadWeb2();\n    }\n\n    await window.ethereum.enable();\n\n    if (acc == \"No Wallet\") {\n      setBtTxt(\"No Wallet\");\n    } else if (acc == \"Wrong Network\") {\n      setBtTxt(\"Wrong Network\");\n    } else {\n      let myAcc =\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\n      setBtTxt(myAcc);\n    }\n  };\n\n  const Check_fuction = async () => {\n    const web3 = window.web3;\n\n    let ULE_NFT_4000_OF = new web3.eth.Contract(ULE_NFT_4000_ABI, ULE_NFT_4000);\n  };\n\n  const allImagesNfts = async () => {\n    let simplleArray = [];\n\n    window.web3 = new Web3(window.ethereum);\n\n    await window.web3.eth.getChainId((err, netId) => {\n      NetId = netId;\n      setNetId_set(NetId);\n    });\n    let acc;\n    let wireNftContractAddress;\n    let wireNftContractAbi;\n\n    if (NetId == 56) {\n      acc = await loadWeb3();\n\n      wireNftContractAddress = \"0xEA83372466969f0a962Ee5d5A385753138FDfBEd\";\n      wireNftContractAbi = [\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_name\", type: \"string\" },\n            { internalType: \"string\", name: \"_symbol\", type: \"string\" },\n            {\n              internalType: \"contract IBEP20\",\n              name: \"_Token\",\n              type: \"address\",\n            },\n            { internalType: \"contract IBEP20\", name: \"_BUSD\", type: \"address\" },\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"_bnbtobusd\",\n              type: \"address\",\n            },\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"_ULEtobnblp\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"constructor\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"approved\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          name: \"Approval\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"operator\",\n              type: \"address\",\n            },\n            {\n              indexed: false,\n              internalType: \"bool\",\n              name: \"approved\",\n              type: \"bool\",\n            },\n          ],\n          name: \"ApprovalForAll\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"previousOwner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"newOwner\",\n              type: \"address\",\n            },\n          ],\n          name: \"OwnershipTransferred\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          name: \"Transfer\",\n          type: \"event\",\n        },\n        {\n          inputs: [],\n          name: \"BUSD\",\n          outputs: [\n            { internalType: \"contract IBEP20\", name: \"\", type: \"address\" },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"BUSDtobnb\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"BnbtoBusd\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"ClaimBNB\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"ClaimBUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"Claimtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"MaxLimitPerTransaction\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"MinitngPricein_token\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetMinitngPricein_Token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMinitngPricein_BUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMinitngPricein_Token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMintingPricein_BNB\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Token\",\n          outputs: [\n            { internalType: \"contract IBEP20\", name: \"\", type: \"address\" },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"ULEtobnb\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"ULEtobnblp\",\n          outputs: [\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"ValueinULE\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Valueinbnb\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMinitngPricein_BUSD\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMinitngPricein_token\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMintingPricein_BNB\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Whitelist_MaxLimitPerTransaction\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"addressMintedBalance\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"approve\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n          name: \"balanceOf\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"baseURI\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"bnbbusdlp\",\n          outputs: [\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"bnbtoULE\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"getApproved\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\n            { internalType: \"address\", name: \"operator\", type: \"address\" },\n          ],\n          name: \"isApprovedForAll\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"iswhitelist\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"maxsupply\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n          ],\n          name: \"mint_with_BNB\",\n          outputs: [],\n          stateMutability: \"payable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          ],\n          name: \"mint_with_BUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          ],\n          name: \"mint_with_token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"mintedNFTs\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"name\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"notRevealedUri\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"one$toULE\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"owner\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"ownerOf\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"paused\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"pausedminting\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"pricetime\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"renounceOwnership\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"reveal\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"revealed\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"safeTransferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n          ],\n          name: \"safeTransferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"operator\", type: \"address\" },\n            { internalType: \"bool\", name: \"approved\", type: \"bool\" },\n          ],\n          name: \"setApprovalForAll\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_newBaseURI\", type: \"string\" },\n          ],\n          name: \"setBaseURI\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"setMaxLimitPerTransaction\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"setMaxSupply\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_notRevealedURI\", type: \"string\" },\n          ],\n          name: \"setNotRevealedURI\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"bool\", name: \"_state\", type: \"bool\" }],\n          name: \"setRevealed\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"setWhitelist_MaxLimitPerTransaction\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"string\",\n              name: \"_newbaseExtension\",\n              type: \"string\",\n            },\n          ],\n          name: \"setbaseExtension\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"string\",\n              name: \"_newnotRevealedUri\",\n              type: \"string\",\n            },\n          ],\n          name: \"setnotRevealedUri\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_addr\", type: \"address\" },\n            { internalType: \"bool\", name: \"_state\", type: \"bool\" },\n          ],\n          name: \"setwhitelist\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" },\n          ],\n          name: \"supportsInterface\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"symbol\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n          name: \"tokenByIndex\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\n            { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\n          ],\n          name: \"tokenOfOwnerByIndex\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_tokenId\", type: \"uint256\" },\n          ],\n          name: \"tokenURI\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"totalSupply\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"transferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"newOwner\", type: \"address\" },\n          ],\n          name: \"transferOwnership\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"unpaused\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_owner\", type: \"address\" },\n          ],\n          name: \"walletOfOwner\",\n          outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdraw\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawBUSDtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_addr\", type: \"address\" },\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawothertoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n      ];\n    } else {\n      acc = await loadWeb2();\n\n      wireNftContractAddress = \"0xfd358c1055E95ad91FCD24837e8F87417c788E3D\";\n\n      wireNftContractAbi = [\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_name\", type: \"string\" },\n            { internalType: \"string\", name: \"_symbol\", type: \"string\" },\n            {\n              internalType: \"contract IBEP20\",\n              name: \"_Token\",\n              type: \"address\",\n            },\n            { internalType: \"contract IBEP20\", name: \"_BUSD\", type: \"address\" },\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"_matictobusd\",\n              type: \"address\",\n            },\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"_whetomaticlp\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"constructor\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"approved\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          name: \"Approval\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"operator\",\n              type: \"address\",\n            },\n            {\n              indexed: false,\n              internalType: \"bool\",\n              name: \"approved\",\n              type: \"bool\",\n            },\n          ],\n          name: \"ApprovalForAll\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"previousOwner\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"newOwner\",\n              type: \"address\",\n            },\n          ],\n          name: \"OwnershipTransferred\",\n          type: \"event\",\n        },\n        {\n          anonymous: false,\n          inputs: [\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              indexed: true,\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          name: \"Transfer\",\n          type: \"event\",\n        },\n        {\n          inputs: [],\n          name: \"BUSD\",\n          outputs: [\n            { internalType: \"contract IBEP20\", name: \"\", type: \"address\" },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"BUSDtoMatic\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"ClaimBUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"ClaimMATIC\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"Claimtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"MatictoBusd\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"MaxLimitPerTransaction\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"MinitngPricein_token\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetMinitngPricein_Token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMinitngPricein_BUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMinitngPricein_token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"SetWhitelistMintingPricein_MATIC\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Token\",\n          outputs: [\n            { internalType: \"contract IBEP20\", name: \"\", type: \"address\" },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"ValueinWHE\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Valueinmatic\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMinitngPricein_BUSD\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMinitngPricein_token\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"WhitelistMintingPricein_MATIC\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"Whitelist_MaxLimitPerTransaction\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"addressMintedBalance\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"approve\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n          name: \"balanceOf\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"baseURI\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"getApproved\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\n            { internalType: \"address\", name: \"operator\", type: \"address\" },\n          ],\n          name: \"isApprovedForAll\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"iswhitelist\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"maticbusdlp\",\n          outputs: [\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"matictowhe\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"maxsupply\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          ],\n          name: \"mint_with_BUSD\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n          ],\n          name: \"mint_with_MATIC\",\n          outputs: [],\n          stateMutability: \"payable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_count\", type: \"uint256\" },\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          ],\n          name: \"mint_with_token\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          name: \"mintedNFTs\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"name\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"notRevealedUri\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"one$towhe\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"owner\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"ownerOf\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"paused\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"pausedminting\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"pricetime\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"renounceOwnership\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"reveal\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"revealed\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"safeTransferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n            { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n          ],\n          name: \"safeTransferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"operator\", type: \"address\" },\n            { internalType: \"bool\", name: \"approved\", type: \"bool\" },\n          ],\n          name: \"setApprovalForAll\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_newBaseURI\", type: \"string\" },\n          ],\n          name: \"setBaseURI\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"setMaxLimitPerTransaction\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"setMaxSupply\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"string\", name: \"_notRevealedURI\", type: \"string\" },\n          ],\n          name: \"setNotRevealedURI\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"bool\", name: \"_state\", type: \"bool\" }],\n          name: \"setRevealed\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_value\", type: \"uint256\" },\n          ],\n          name: \"setWhitelist_MaxLimitPerTransaction\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"string\",\n              name: \"_newbaseExtension\",\n              type: \"string\",\n            },\n          ],\n          name: \"setbaseExtension\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"string\",\n              name: \"_newnotRevealedUri\",\n              type: \"string\",\n            },\n          ],\n          name: \"setnotRevealedUri\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_addr\", type: \"address\" },\n            { internalType: \"bool\", name: \"_state\", type: \"bool\" },\n          ],\n          name: \"setwhitelist\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" },\n          ],\n          name: \"supportsInterface\",\n          outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"symbol\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n          name: \"tokenByIndex\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\n            { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\n          ],\n          name: \"tokenOfOwnerByIndex\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_tokenId\", type: \"uint256\" },\n          ],\n          name: \"tokenURI\",\n          outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"totalSupply\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"from\", type: \"address\" },\n            { internalType: \"address\", name: \"to\", type: \"address\" },\n            { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          ],\n          name: \"transferFrom\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"newOwner\", type: \"address\" },\n          ],\n          name: \"transferOwnership\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"unpaused\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_owner\", type: \"address\" },\n          ],\n          name: \"walletOfOwner\",\n          outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"whetomatic\",\n          outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [],\n          name: \"whetomaticlp\",\n          outputs: [\n            {\n              internalType: \"contract IPancakePair\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdraw\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawBUSDtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"address\", name: \"_addr\", type: \"address\" },\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawothertoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n        {\n          inputs: [\n            { internalType: \"uint256\", name: \"_amount\", type: \"uint256\" },\n          ],\n          name: \"withdrawtoken\",\n          outputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n        },\n      ];\n    }\n\n    // console.log(\"Account\", acc);\n    // console.log(\"wireNftContractAddress\",wireNftContractAddress);\n    if (acc == \"No Wallet\") {\n      console.log(\"wallet\");\n      setBtTxt(\"Connect Wallet\");\n    } else if (acc == \"Wrong Network\") {\n      setBtTxt(\"Wrong Network\");\n    } else if (acc == \"Connect Wallet\") {\n      console.log(\"Connect Wallet\");\n    } else {\n      const web3 = window.web3;\n      let ULE_NFT_100_OF = new web3.eth.Contract(ULE_NFT_100_ABI, ULE_NFT_100);\n      let ULE_NFT_200_OF = new web3.eth.Contract(ULE_NFT_200_ABI, ULE_NFT_200);\n      let ULE_NFT_300_OF = new web3.eth.Contract(ULE_NFT_300_ABI, ULE_NFT_300);\n      let ULE_NFT_400_OF = new web3.eth.Contract(ULE_NFT_400_ABI, ULE_NFT_400);\n      let ULE_NFT_500_OF = new web3.eth.Contract(ULE_NFT_500_ABI, ULE_NFT_500);\n      let ULE_NFT_1000_OF = new web3.eth.Contract(\n        ULE_NFT_1000_ABI,\n        ULE_NFT_1000\n      );\n      let ULE_NFT_2000_OF = new web3.eth.Contract(\n        ULE_NFT_2000_ABI,\n        ULE_NFT_2000\n      );\n      let ULE_NFT_3000_OF = new web3.eth.Contract(\n        ULE_NFT_3000_ABI,\n        ULE_NFT_3000\n      );\n      let ULE_NFT_4000_OF = new web3.eth.Contract(\n        ULE_NFT_4000_ABI,\n        ULE_NFT_4000\n      );\n      let ULE_NFT_5000_OF = new web3.eth.Contract(\n        ULE_NFT_5000_ABI,\n        ULE_NFT_5000\n      );\n      let ULE_NFT_10000_OF = new web3.eth.Contract(\n        ULE_NFT_10000_ABI,\n        ULE_NFT_10000\n      );\n      let mintingWirePrice = await axios.get(\n        \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\n      );\n      mintingWirePrice = mintingWirePrice?.data?.data[0]?.usdperunit;\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\n      let walletOfOwner100 = await ULE_NFT_100_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price100 = await ULE_NFT_100_OF.methods.MinitngPricein_token().call();\n      let Price100 = mintingWirePrice * 100;\n\n      let walletLength = walletOfOwner100.length;\n      console.log(\"walletOfOwner\", walletLength, Price100);\n      setMyWalletLength(walletLength);\n      for (let i = 0; i < walletLength; i++) {\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmdHtZGQU4FPBfytDAEyKYCqXHcNtzWSM6ymPuWVRnVR5Q/${walletOfOwner100[i]}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price100;\n          let token_id = walletOfOwner100[i];\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner200 = await ULE_NFT_200_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price200 = await ULE_NFT_200_OF.methods.MinitngPricein_token().call();\n      let Price200 = mintingWirePrice * 200;\n\n      let walletLength200 = walletOfOwner200.length;\n      console.log(\"walletLength200\", walletLength200, Price200);\n      // walletLength200=2770+walletLength200;\n      setMyWalletLength(walletLength200);\n      for (let i = 0; i < walletLength200; i++) {\n        let val = walletOfOwner200[i];\n        let token_id = walletOfOwner200[i];\n\n        let url_num = 2770 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmZfw5joy4ZDhXZiJu5EvRuNYEP38MAYbKcMjWdB3DfwTZ/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price200;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner300 = await ULE_NFT_300_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price300 = await ULE_NFT_300_OF.methods.MinitngPricein_token().call();\n      let Price300 = 300 * mintingWirePrice;\n\n      let walletLength300 = walletOfOwner300.length;\n      console.log(\"walletOfOwner\", walletLength300);\n      setMyWalletLength(walletLength300);\n      for (let i = 0; i < walletLength300; i++) {\n        let val = walletOfOwner300[i];\n        let token_id = walletOfOwner300[i];\n\n        let url_num = 3460 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmVEzHWb59Zo9r9sUEY1CVwWoFQkYEk4VgHRYYT83Vq636/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price300;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner400 = await ULE_NFT_400_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price400 = await ULE_NFT_400_OF.methods.MinitngPricein_token().call();\n\n      let Price400 = 400 * mintingWirePrice;\n      let walletLength400 = walletOfOwner400.length;\n      console.log(\"walletOfOwner\", walletLength400);\n      setMyWalletLength(walletLength400);\n      for (let i = 0; i < walletLength400; i++) {\n        let val = walletOfOwner400[i];\n        let token_id = walletOfOwner400[i];\n\n        let url_num = 4130 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmVjhfnbMkBgsw1ijXGr6FFohhD55Nm7SZupTdkWEzzGQX/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price400;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner500 = await ULE_NFT_500_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price500 = await ULE_NFT_500_OF.methods.MinitngPricein_token().call();\n      let Price500 = 500 * mintingWirePrice;\n\n      let walletLength500 = walletOfOwner500.length;\n      console.log(\"walletOfOwner\", walletLength500);\n      setMyWalletLength(walletLength500);\n      for (let i = 0; i < walletLength500; i++) {\n        let val = walletOfOwner500[i];\n        let token_id = walletOfOwner500[i];\n\n        let url_num = 4800 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmYhnW22KPbckGWaePUASowNHKrck3Xk2XcVRbYM78ktTU/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price500;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner1000 = await ULE_NFT_1000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price1000 = await ULE_NFT_1000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price1000 = 1000 * mintingWirePrice;\n      let walletLength1000 = walletOfOwner1000.length;\n      console.log(\"walletOfOwner\", walletLength1000);\n      setMyWalletLength(walletLength1000);\n      for (let i = 0; i < walletLength1000; i++) {\n        let val = walletOfOwner1000[i];\n        let token_id = walletOfOwner1000[i];\n\n        let url_num = 5540 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmRpDTwYkr81eix3MJQuAYqMksXhdRFDutjzYok3Z7JHge/p1/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price1000;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner2000 = await ULE_NFT_2000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price2000 = await ULE_NFT_2000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price2000 = 2000 * mintingWirePrice;\n      let walletLength2000 = walletOfOwner2000.length;\n      console.log(\"walletOfOwner\", walletLength2000);\n      setMyWalletLength(walletLength2000);\n      for (let i = 0; i < walletLength2000; i++) {\n        let val = walletOfOwner2000[i];\n        let token_id = walletOfOwner2000[i];\n\n        let url_num = 5840 + +val;\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmPDQfrrLFiNwHPrE4f2oZP3Zspg4ZMk6jAu9spTNdmk4p/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price2000;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner3000 = await ULE_NFT_3000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price3000 = await ULE_NFT_3000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price3000 = 3000 * mintingWirePrice;\n      let walletLength3000 = walletOfOwner3000.length;\n      console.log(\"walletOfOwner\", walletLength3000);\n      setMyWalletLength(walletLength3000);\n      for (let i = 0; i < walletLength3000; i++) {\n        let val = walletOfOwner3000[i];\n        let url_num = 6140 + +val;\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmaFcyFxBQuo7qxvzN3PYm9W6oHeJypbiC9FuYhf6XeSEG/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price3000;\n          let token_id = walletOfOwner3000[i];\n\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n      let walletOfOwner4000 = await ULE_NFT_4000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price4000 = await ULE_NFT_4000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price4000 = 4000 * mintingWirePrice;\n      let walletLength4000 = walletOfOwner4000.length;\n      console.log(\"walletOfOwner4000\", walletOfOwner4000);\n      setMyWalletLength(walletLength4000);\n      for (let i = 0; i < walletLength4000; i++) {\n        let val = walletOfOwner4000[i];\n        let startValue = 6440;\n        console.log(\"Val400\", val);\n        let url_num = 6440 + +val;\n        console.log(\"Val400\", url_num);\n\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmeBnPEeQTaGgvKLYq7Ej51Kq5Kh2dNjan5fTg1eNkWBjZ/${url_num}.gif`\n          );\n          console.log(\"Check44\");\n          console.log(\"check\", res);\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          let token_id = walletOfOwner4000[i];\n\n          let dna = Price4000;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner5000 = await ULE_NFT_5000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n      // let Price5000 = await ULE_NFT_5000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price5000 = 5000 * mintingWirePrice;\n      let walletLength5000 = walletOfOwner5000.length;\n      console.log(\"walletOfOwner5000\", walletLength5000);\n      setMyWalletLength(walletLength5000);\n      for (let i = 0; i < walletLength5000; i++) {\n        let val = walletOfOwner5000[i];\n        let url_num = 6740 + +val;\n        console.log(\"url_num500\", url_num);\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmcSECUxFXFpxVUzWP63qPyonfRt8qW5UaJHa8GDL9yZnV/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let token_id = walletOfOwner5000[i];\n\n          let dna = Price5000;\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n\n      let walletOfOwner10000 = await ULE_NFT_10000_OF.methods\n        .WalletOfOwner(acc)\n        .call();\n\n      // let Price10000 = await ULE_NFT_10000_OF.methods\n      //   .MinitngPricein_token()\n      //   .call();\n      let Price10000 = 10000 * mintingWirePrice;\n\n      let walletLength10000 = walletOfOwner10000.length;\n      console.log(\"walletOfOwner\", walletLength10000);\n      setMyWalletLength(walletLength10000);\n      for (let i = 0; i < walletLength10000; i++) {\n        let val = walletOfOwner10000[i];\n        let url_num = 7040 + +val;\n        try {\n          let res = await axios.get(\n            `https://usdulenft.mypinata.cloud/ipfs/QmeSFY6S6DzrhW7UPX9hfy6AvnwTahFQT15wCtWp7d25Mr/${url_num}.gif`\n          );\n          // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\n          let imageUrl = res.config.url;\n          console.log(\"check\", res);\n          let dna = Price10000;\n          let token_id = walletOfOwner10000[i];\n\n          simplleArray = [\n            ...simplleArray,\n            { imageUrl: imageUrl, num: dna, token_id: token_id },\n          ];\n          setImageArray(simplleArray);\n        } catch (e) {\n          console.log(\"Error while Fetching Api\", e);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      getAccount();\n    }, 500);\n    allImagesNfts();\n    // Check_fuction()\n  }, []);\n  return (\n    <div>\n      <div\n        class=\"live-auctions-area colection_div section-padding-100-50 bg-overlay-2 bg-img\"\n        // style=\"background-image: url(bg-shape.jpg);\"\n      >\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12 text-center\">\n              <h6 class=\"heading-sub\">New Collection</h6>\n              <h2 class=\"heading-title\">All Collections</h2>\n            </div>\n          </div>\n\n          <div class=\"row justify-content-center\">\n            {imageArray.map((items, idex) => {\n              return (\n                <div class=\"col-sm-6 col-lg-4\">\n                  <div class=\"single-live-auction home-2\">\n                    <div class=\" home-2\">\n                      <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\n                    </div>\n\n                    <div class=\"collection-text home-2 text-center\">\n                      <a href=\"#\">\n                        YULE NFT ID:{items.token_id}, {items.num} USD\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            {/* <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-5.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Jisan Donan</a>\n                  <p>20% of the part</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-2.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Trihana Donan</a>\n                  <p>40% of the part</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-3.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Jisan Donan</a>\n                  <p>20% of the part</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-5.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Jisan Donan</a>\n                  <p>20% of the part</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-6.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Jisan Donan</a>\n                  <p>20% of the part</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-sm-6 col-lg-4\">\n              <div class=\"single-live-auction home-2\">\n                <div class=\"auction-thumb home-2\">\n                  <img src=\"s-4.jpg\" alt=\"Image\" />\n                </div>\n\n                <div class=\"collection-text home-2 text-center\">\n                  <a href=\"#\">Jisan Donan</a>\n                  <p>20% of the part</p>\n                </div>\n              </div>\n            </div> */}\n\n            {/* <!-- Button -->\n                <!-- <div class=\"col-12\">\n                    <div class=\"btn-area mb-50 text-center\">\n                        <a class=\"btn btn-box\" href=\"#\">View All</a>\n                    </div>\n                </div> --> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\n\nexport default function ModelOpen({setShowModal,showModal,subMitFunction}) {\n    const [inputdatahere, setinputdatahere] = useState('')\n\n  \n\n  return (\n    <div>\n           \n      \n\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Mint.css\";\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport ModelOpen from \"./ModelOpen\";\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Mint({ chainid_id }) {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonTwo(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor Wire\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let wireContractOf = new web3.eth.Contract(\r\n              wireTokenAbi,\r\n              wireTokenAddress\r\n            );\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let userBusdBalance = await wireContractOf.methods\r\n                .balanceOf(acc)\r\n                .call();\r\n              console.log(\"userBusdBalance\", userBusdBalance);\r\n              // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingWirePrice = await nftContractOf.methods\r\n                .ValueinULE()\r\n                .call();\r\n              // mintingWirePrice = mintingWirePrice[1]\r\n              mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n              // console.log(\"mintingWirePrice\", mintingWirePrice);\r\n              mintingWirePrice = parseFloat(mintingWirePrice);\r\n              let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n              totalMintingPriceWire = web3.utils.toWei(\r\n                totalMintingPriceWire.toString()\r\n              );\r\n              // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                      await wireContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceWire)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Approve Confirmed\");\r\n\r\n                      // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                      // console.log(\"value\", value);\r\n                      let data_value = value;\r\n\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_token(data_value, totalMintingPriceWire)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceWire,\r\n                          txn: hash,\r\n                        }\r\n                      );\r\n\r\n                      // console.log(\"postapi\", postapi);\r\n                      // toast.success(\"Success\", postapi.data.data)\r\n\r\n                      setButtonTwo(\"Mint With YULE\");\r\n                      setinputdatahere(\" \");\r\n\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                      // let z = value * BusdPrice;\r\n\r\n                      // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                      //     from: acc\r\n                      // })\r\n                      // toast.success(\"Transaction Confirmed\")\r\n                      // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                      // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                      //     from: acc,\r\n                      // })\r\n                      // toast.success(\"Transaction Succefful\")\r\n                      // setButtonTwo(\"Mint With YULE\")\r\n                      // // console.log(\"hash\", hash.transactionHash);\r\n                      // hash = hash.transactionHash\r\n                      // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                      //     \"uid\": inputdatahere,\r\n                      //     \"address\": acc,\r\n                      //     \"nft\": value,\r\n                      //     \"token\": z,\r\n                      //     \"txn\": hash\r\n                      // })\r\n                      // toast.success(\"Transaction Confirmed\")\r\n\r\n                      // // console.log(\"postapi\", postapi);\r\n                      // toast.success(\"Success\", postapi.data.data)\r\n                      // setinputdatahere(\" \")\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonTwo(\"Mint With YULE\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n\r\n              // }\r\n              // else {\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonTwo(\"Mint With YULE\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"User Is Not Exists\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(\r\n        wireNftContractAbi,\r\n        wireNftContractAddress\r\n      );\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      let mintingWirePrice = await nftContractOf.methods.ValueinULE().call();\r\n      // mintingWirePrice = mintingWirePrice[1]\r\n      mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <h3>Sponser</h3>\r\n          <p>Please Enter Sponser Id here bnb</p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setinputdatahere(e.target.value)}\r\n            value={inputdatahere}\r\n            className=\"form-control\"\r\n          />\r\n          <button\r\n            onClick={() => myMintBNB()}\r\n            className=\" btn modelbtnhere mt-4 btn_box_model\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Body>\r\n        {/* / */}\r\n      </Modal>\r\n      <Modal\r\n        show={showModal2}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <h3>Sponser</h3>\r\n          <p>Please Enter Sponser Id here wire</p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setinputdatahere(e.target.value)}\r\n            value={inputdatahere}\r\n            className=\"form-control\"\r\n          />\r\n          <button\r\n            onClick={() => myMintWire()}\r\n            className=\" btn modelbtnhere mt-4 btn_box_model\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Body>\r\n        {/* / */}\r\n      </Modal>\r\n      <Modal\r\n        show={showModal3}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <h3>Sponser</h3>\r\n          <p>Please Enter Sponser Id here busfd</p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setinputdatahere(e.target.value)}\r\n            value={inputdatahere}\r\n            className=\"form-control\"\r\n          />\r\n          <button\r\n            onClick={() => myMintBUSD()}\r\n            className=\" btn modelbtnhere btn_box_model mt-4\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Body>\r\n        {/* / */}\r\n      </Modal>\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 100 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mint;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { TiSocialFacebook } from \"react-icons/ti\";\r\nimport { TiSocialTwitter } from \"react-icons/ti\";\r\nimport { TiSocialInstagram } from \"react-icons/ti\";\r\nimport { SiWhatsapp } from \"react-icons/si\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <footer class=\"dark:bg-jacarta-900 page-footer ft_bg\">\r\n        <div class=\"container\">\r\n          <div class=\"row_width pt_3\">\r\n            <div class=\"width_4\">\r\n              <a href=\"index.html\" class=\"mb-6 aaa inline-block\">\r\n                <img\r\n                  src=\"logoyule.png\"\r\n                  class=\"max-h-7 dark:hidden\"\r\n                  alt=\"Xhibiter | NFT Marketplace\"\r\n                />\r\n                <img\r\n                  src=\"logo_white.png\"\r\n                  class=\"hidden max-h-7 dark:block\"\r\n                  alt=\"Xhibiter | NFT Marketplace\"\r\n                />\r\n              </a>\r\n              <p class=\"txt_white\">\r\n                Create, sell and collect truly rare digital art works. Powered by\r\n                blockchain technology.\r\n              </p>\r\n            </div>\r\n            {/* <div class=\"width_4\">\r\n              <h3 class=\"font-display text-jacarta-700 mb-6 text-sm dark:text-white\">\r\n                Useful Link\r\n              </h3>\r\n              <div class=\"row_width\">\r\n                <div class=\"width_50 ftr  foother_center\">\r\n                  <ul class=\"ft_color flex flex-col space-y-1 new_class_ul\">\r\n                    <li>\r\n                      <Link to=\"/\" className=\"link_text\">\r\n                        <a class=\"hover:text-accent dark:hover:text-white\">\r\n                          Home\r\n                        </a>\r\n                      </Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                      <Link to=\"/Collection_main\" className=\"link_text\">\r\n                        <a class=\"hover:text-accent dark:hover:text-white\">\r\n                          Collection\r\n                        </a>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/Benefits_main\" className=\"link_text\">\r\n                        <a class=\"hover:text-accent dark:hover:text-white\">\r\n                          Benifits\r\n                        </a>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/Road_main\" className=\"link_text\">\r\n                        <a class=\"hover:text-accent dark:hover:text-white\">\r\n                          Roadmap\r\n                        </a>\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/Mint_main\" className=\"link_text\">\r\n                        <a class=\"hover:text-accent dark:hover:text-white\">\r\n                          Mint\r\n                        </a>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n            {/* <div class=\"width_4 icn\">\r\n              <h3 class=\"font-display text-jacarta-700 mb-6 text-sm dark:text-white\">\r\n                Social Link\r\n              </h3>\r\n              <div class=\"flex space-x-5\">\r\n                <a\r\n                  href=\"https://t.me/joinchat/U8ot8F38yb4zZjY1\"\r\n                  target=\"_blank\"\r\n                  class=\"group social_icon\"\r\n                >\r\n                  <i class=\"fa fa-paper-plane\"></i>\r\n                </a>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n\r\n          <div class=\"flex flex-col end items-center justify-between space-y-2 py-8 sm:flex-row sm:space-y-0\">\r\n            <span\r\n              class=\"dark:text-jacarta-400 text-sm\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              © 2022 yulenft.com\r\n            </span>\r\n            {/* <ul class=\"dark:text-jacarta-400 flex flex-wrap space-x-4 text-sm\">\r\n              <li>\r\n                <a\r\n                  href=\"javascript:void(0)\"\r\n                  class=\"hover:text-accent terms text-white\"\r\n                >\r\n                  Terms and conditions\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"javascript:void(0)\"\r\n                  class=\"hover:text-accent policy text-white\"\r\n                >\r\n                  Privacy policy\r\n                </a>\r\n              </li>\r\n            </ul> */}\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Footer from \"./Footer/Footer\";\nimport Front2 from \"./Front2/Front2\";\nimport Front3 from \"./Front3/Front3\";\nimport Front4 from \"./Front4/Front4\";\nimport Mint from \"./Mint/Mint\";\n\nexport default function Collection_main() {\n  return (\n    <div>\n      <div class=\"breadcrumb-area\">\n        <div className=\"second_img\">\n        <div class=\"container h-100\">\n          <div class=\"row h-100 align-items-center justify-content-center\">\n            <div class=\"col-lg-5\">\n              <div class=\"breadcrumb-title text-center\">\n                <h2>All Collections </h2>\n                <ul class=\"breadcrumb-list\">\n                  <li>Home</li>\n                  <li>\n                    <i class=\"fas fa-angle-double-right\"></i>\n                  </li>\n                  <li>Collection</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        </div>\n       \n      </div>\n      <Front4 />\n    </div>\n  );\n}\n","import React from 'react'\nimport Footer from \"./Footer/Footer\";\nimport Front2 from \"./Front2/Front2\";\nimport Front3 from \"./Front3/Front3\";\nimport Front4 from \"./Front4/Front4\";\nimport Mint from \"./Mint/Mint\";\n\nexport default function Collection_main() {\n  return (\n    <div>\n        <div class=\"breadcrumb-area\" >\n          <div className='second_img'>\n        <div class=\"container h-100\">\n            <div class=\"row h-100 align-items-center justify-content-center\">\n                <div class=\"col-lg-5\">\n                    <div class=\"breadcrumb-title text-center\">\n                        <h2>Benefits </h2>\n                        <ul class=\"breadcrumb-list\">\n                            <li>Home</li>\n                            <li><i class=\"fas fa-angle-double-right\"></i></li>\n                            <li>Benefits</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n      <Front2 />\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport Footer from \"./Footer/Footer\";\nimport Front2 from \"./Front2/Front2\";\nimport Front3 from \"./Front3/Front3\";\nimport Front4 from \"./Front4/Front4\";\nimport Mint from \"./Mint/Mint\";\nimport Mint_polygon from './Mint_Polygon/Mint_polygon';\n\nexport default function Mint_main({ chainid }) {\n\n  // const [chainid_id, setchainid_id] = useState(chainid)\n\n  let chainid_id = chainid\n\n  console.log(\"chainid_id\", chainid_id);\n\n\n\n  return (\n    <div>\n      <div class=\"breadcrumb-area\" >\n        <div className='second_img'>\n          <div class=\"container h-100\">\n            <div class=\"row h-100 align-items-center justify-content-center\">\n              <div class=\"col-lg-5\">\n                <div class=\"breadcrumb-title text-center\">\n                  <h2>Mint</h2>\n                  <ul class=\"breadcrumb-list\">\n                    <li>Home</li>\n                    <li><i class=\"fas fa-angle-double-right\"></i></li>\n                    <li>Mint</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Mint />\n\n\n    </div>\n  )\n}","import React from 'react';\nimport \"./Terms.css\";\n\nfunction Terms() {\n    return (\n        <div>\n                    <div className=\"terms_main\">\n                    <div className=\"container\">\n                        <h1>Terms Of Service</h1>\n                        <span>Definitions:</span><br />\n                        <p><span>“Crypto Assets”</span>refers to unique non-fungible tokens, implemented on the Polygon using smart contracts, including without limitation MetaMask , WalletConnect. Please note this list changed without prior notice.\n                        </p>\n                        <h4>Introduction</h4>\n                        <p>The WHE website, owned and operated by Worthwhile Group. WHE (“WHE,” “we,” “us” or “our”). These Terms of Use (these “Terms”) govern your access to and use of the WHE website; including without limitation the creation, purchase, sale, exchange, or modification of certain digital assets. Worthwhile IS A TECHNOLOGICAL PLATFORM AND NOT A BROKER, FINANCIAL INSTITUTION, OR CREDITOR. WHE FACILITATES TRANSACTIONS BETWEEN THE BUYER AND SELLER IN THE AUCTION BUT IS NOT A PARTY TO THE TRANSACTION BETWEEN A BUYER AND SELLER OF CRYPTO ASSETS. DUE TO THE DECENTRLIZED NATURE OF THE SERVICE, IN NO STAGE DOES WHE HOLD OR POSSES ANY ASSETS ON BEHALF OF THE USERS.\n                        </p>\n                        <h4>Linking a digital wallet</h4>\n                        <p>Action on the WHE website such as: initiating an Auction or offering to purchase a Crypto Asset, can be performed strictly by linking your digital wallets on supported bridge extensions.<br></br> We advise you to read the details on their website before you elect to use them.  Before initiating an Auction or offering to purchase an asset through WHE you will need to connect a supported electronic wallet extension and unlock your digital wallets with that extension.\n                            ALL TRANSACTIONS INITIATED THROUGH OUR SERVICE ARE FACILITATED AND RUN BY THESE THIRD-PARTY ELECTRONIC WALLET EXTENSIONS, AND BY USING OUR SERVICES YOU AGREE THAT YOU ARE GOVERNED BY THE TERMS OF SERVICE AND PRIVACY POLICY FOR THE APPLICABLE EXTENSIONS.\n                        </p>\n                        <h4>No Representation</h4>\n                        <p>YOU BEAR FULL RESPONSIBILITY FOR VERIFYING THE IDENTITY, LEGITIMACY, AND AUTHENTICITY OF ASSETS YOU PURCHASE ON WHE platform. NOTWITHSTANDING INDICATORS AND MESSAGES THAT SUGGEST VERIFICATION, WHE MAKES NO CLAIMS ABOUT THE IDENTITY, LEGITIMACY, OR AUTHENTICITY OF ASSETS ON THE PLATFORM.<br></br>\n                            THESE TERMS OF USE ARE IMPORTANT AND AFFECT YOUR LEGAL RIGHTS, SO PLEASE READ THEM CAREFULLY. WE WANT TO LET YOU KNOW THAT THE TERMS INCLUDE AN ARBITRATION AGREEMENT WHICH WILL, WITH LIMITED EXCEPTIONS, REQUIRE DISPUTES BETWEEN US TO BE SUBMITTED TO BINDING AND FINAL ARBITRATION. UNLESS YOU OPT OUT OF THE ARBITRATION AGREEMENT: (1) YOU WILL ONLY BE PERMITTED TO PURSUE CLAIMS AND SEEK RELIEF AGAINST US ON AN INDIVIDUAL BASIS, NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY CLASS OR REPRESENTATIVE ACTION OR PROCEEDING; AND (2) YOU ARE AGREEING TO MANDATORY INDIVIDUAL ARBITRATION FOR THE RESOLUTION OF DISPUTES AND WAIVING YOUR RIGHT TO A JURY TRIAL ON YOUR CLAIMS. PLEASE READ SECTION 15 CAREFULLY.<br></br>\n                            BY CLICKING ON THE “I ACCEPT” BUTTON, COMPLETING THE ACCOUNT REGISTRATION PROCESS, USING OUR SERVICES AND/OR PURCHASING CRYPTO ASSETS, YOU AGREE TO BE BOUND BY THESE TERMS AND ALL OF THE TERMS INCORPORATED HEREIN BY REFERENCE. IF YOU DO NOT AGREE TO THESE TERMS, YOU MAY NOT ACCESS OR USE THE SERVICE OR PURCHASE THE CRYPTO ASSETS.\n                        </p>\n                        <h4>Changes to the Terms of Service</h4>\n                        <p>WE reserves the right to change or modify these Terms at any time and in our sole discretion. If we make changes to these Terms, we will provide notice of such changes, such as by sending an email notification, providing notice through the Service, or updating the “Last Updated” date at the beginning of these Terms. By continuing to access or use the Service, you confirm your acceptance of the revised Terms and all the terms incorporated therein by reference. We encourage you to review the Terms frequently to ensure that you understand the terms and conditions that apply when you access or use the Service. If you do not agree to the revised Terms, you may not access or use the Service. We sometimes need to describe additional terms for specific services. Those additional terms and conditions, which are available with the relevant services, will then automatically become part of your agreement with us if you use those services.\n                        </p>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default Terms","import React from 'react'\nimport './Privacy_style.css'\n\nexport default function Privacy_Policy() {\n    return (\n        <div>\n\n            <div className=\"main_div_privacy\">\n                <div className=\"container\">\n                    <h1>Privacy Policy</h1>\n                    <p> Please refer to our privacy policy for information about how we collect, use and share personal information about you.</p>\n                    <h4>Account Registration and Communication Preferences</h4>\n                    <p>You will need to register for an account on the Service (“Account”). By creating an Account, you agree to (a) provide accurate, current and complete Account information about yourself, (b) maintain and promptly update from time to time as necessary your Account information, (c) maintain the security of your password and accept all risks of unauthorized access to your Account and the information you provide to us, and (d) immediately notify us if you discover or otherwise suspect any security breaches related to the Service, or your Account. WHE may block multiple accounts of the same user. Also, you agree that you will not:\n                    </p>\n                    <ul className='ul_class'>\n                        <li>Create another account if we have disabled one you had unless you have our written permission first.</li>\n                        <li>Create another account if we have disabled one you had unless you have our written permission first.</li>\n                        <li>Buy, sell, rent, or lease access to your Account or username unless you have our written permission first.</li>\n                        <li>Share your Account password with anyone; or log in or try to log in to access the Service through unauthorized third-party applications or clients.</li>\n                    </ul>\n                    <h4>Regulatory Requirements </h4>\n                    <p>WHE may require you to provide additional information and documents at the request of any competent authority or in case of application of any applicable law or regulation, including laws related to anti-laundering (legalization) of incomes obtained by criminal means, or for counteracting financing of terrorism. WHE may also require you to provide additional information and documents in cases where it has reasons to believe that</p>\n                    <ul className='ul_class'>\n                        <li>Your Account is being used for money laundering or for any other illegal activity.</li>\n                        <li>You have concealed or reported false identification information and other details; or</li>\n                        <li>Transactions effected via your Account were affected in breach of these Terms.</li>\n                    </ul>\n                    <p>In such cases, WHE, in its sole discretion, may pause or cancel your Auction transactions until such additional information and documents are reviewed by WHE and accepted as satisfying the requirements of applicable law. If you do not provide complete and accurate information and documents in response to such a request, WHE may refuse to provide the Content to you.</p>\n                    <h4>Electronic Communications</h4>\n                    <p>By creating an Account, you consent to receive electronic communications from WHE (e.g., via email or by posting notices to the Service). These communications may include notices about your Account (e.g., password changes and other transactional information) and are part of your relationship with us. You agree that any notices, agreements, disclosures, or other communications that we send to you electronically will satisfy any legal communication requirements, including, but not limited to, that such communications be in writing. You should maintain copies of electronic communications from us by printing a paper copy or saving an electronic copy. We may also send you promotional communications via email, including, but not limited to, newsletters, special offers, surveys and other news and information we think will be of interest to you. You may opt out of receiving these promotional emails at any time by following the unsubscribe instructions provided therein.</p>\n                    <h4>Privacy Policy </h4>\n                    <p> By submitting personal data through our Site or Services, you agree to the terms of our privacy policy and you expressly consent to the collection, use and disclosure of your personal data in accordance with the privacy policy.</p>\n                    <h4>Necessary Equipment and Software </h4>\n                    <p>You must provide all equipment and software necessary to connect to the Service and services, including but not limited to, a mobile device that is suitable to connect with and use Service and services, in cases where the Service offers a mobile component. You are solely responsible for any fees, including Internet connection or mobile fees, that you incur when accessing the Service or services.</p>\n                    <h4>Third Party Component Licenses</h4>\n                    <p>Notwithstanding anything to the contrary in these Terms, the Service and Content may include software components provided by WHE or its affiliates or a third party that are subject to separate license terms, in which case those license terms will govern such software components. For example, when you click to get more details about any of the Crypto Assets sold through our marketplace, you will notice a third-party link to the website from which such Crypto Asset originated. Such website may include license terms governing the use of such Crypto Asset. In the event you purchase such Crypto Asset through our marketplace, you are required to comply with such terms.</p>\n                    <p>As stated above, your participation in the Auction is also subject to the rules available on this page, auction policy.</p>\n                    <h1>Ownership</h1>\n                    <p>Unless otherwise indicated in writing by us, the Service and all content and other materials contained therein, including, without limitation, the WHE logo and all designs, text, graphics, pictures, information, data, software, sound files, other files and the selection and arrangement thereof (collectively, “Content”) are the proprietary property of WHE or our affiliates, licensors or users, as applicable.</p>\n                    <h4>Third Party Components</h4>\n                    <p>Notwithstanding anything to the contrary in these Terms, the Service and Content may include software components provided by WHE or its affiliates or a third party that are subject to separate license terms, in which case those license terms will govern such software components.</p>\n                    <h4>WHE IP ‘Authorization for Use’ Requirement</h4>\n                    <p>The WHE logo and any WHE product or service names, logos or slogans that may appear on the Service or Service are trademarks of WHE or our affiliates and may not be copied, imitated or used, in whole or in part, without our prior written permission. You may not use any metatags or other “hidden text” utilizing “WHE” or any other name, trademark or product or service name of WHE or our affiliates without our prior written permission. In addition, the look and feel of the Service and Content, including, without limitation, all page headers, custom graphics, button icons and scripts, constitute the service mark, trademark, or trade dress of WHE and may not be copied, imitated or used, in whole or in part, without our prior written permission. All other trademarks, registered trademarks, product names and WHE names or logos mentioned on the Service are the property of their respective owners and may not be copied, imitated, or used, in whole or in part, without the permission of the applicable trademark holder. Reference to any products, services, processes or other information by name, trademark, manufacturer, supplier or otherwise does not constitute or imply endorsement, sponsorship, or recommendation by WHE.</p>\n                    <h4>License to Access and Use Our Service and Content</h4>\n                    <p>You are hereby granted a limited, nonexclusive, nontransferable, no sublicensable, and personal license to access and use the Service and Content; provided, however, that such license is subject to these Terms and does not include any right to (a) sell, resell or use commercially the Service or Content, (b) distribute, publicly perform or publicly display any Content, (c) modify or otherwise make any derivative uses of the Service or Content, or any portion thereof, (d) use any data mining, robots or similar data gathering or extraction methods, (e) download (other than page caching) any portion of the Service or Content, except as expressly permitted by us, and (f) use the Service or Content other than for their intended purposes.</p>\n                    <h4>Hyperlinks</h4>\n                    <p>You are granted a limited, nonexclusive, nontransferable right to create a text hyperlink to the Service for noncommercial purposes, provided that such link does not portray WHE or our affiliates or any of our products or services in a false, misleading, derogatory, or otherwise defamatory manner, and provided further that the linking site does not contain any adult or illegal material or any material that is offensive, harassing or otherwise objectionable. This limited right may be revoked at any time. You may not use a logo or other proprietary graphic of WHE to link to the Service or Content without our express written permission. Further, you may not use, frame, or utilize framing techniques to enclose any WHE trademark, logo or other proprietary information, including the images found on the Service, the content of any text or the layout or design of any page, or form contained on a page, on the Service without our express written consent.</p>\n                    <h4>Third Party Services</h4>\n                    <p>The Service may contain links to third-party websites (“Third-Party Websites”) and applications (“Third-Party Applications”). When you click on a link to a Third-Party Website or Third-Party Application, we will not warn you that you have left our Service and are subject to the Terms and conditions (including privacy policies) of another website or destination. Such Third-Party Websites and Third-Party Applications and are not under the control of WHE. WHE is not responsible for any Third-Party Websites or Third-Party Applications. WHE provides these Third-Party Websites and Third-Party Applications only as a convenience and does not review, approve, monitor, endorse, warrant, or make any representations with respect to Third-Party Websites or Third-Party Applications, or their products or services. You use all links in Third-Party Websites, and Third-Party Applications at your own risk. When you leave our Service, our Terms and policies no longer govern. You should review all applicable agreements and policies, including privacy and data gathering practices, of any Third-Party Websites or Third-Party Applications, and should make whatever investigation you feel necessary or appropriate before proceeding with any transaction with any third party.</p>\n                    <h4>User Conduct</h4>\n                    <p>You agree that you will not violate any law, contract, intellectual property or other third party right, and that you are solely responsible for your conduct, while accessing or using the Service or participating in the Auction. You agree that you will abide by these Terms and will not:</p>\n                    <ul className='ul_class'>\n                        <li>Provide false or misleading information to WHE;</li>\n                        <li>Use or attempt to use another user’s Account without authorization from such user and WHE;</li>\n                        <li>Create or list counterfeit items.</li>\n                        <li>Pose as another person or create a misleading username.</li>\n                        <li>Use the Service in any manner that could interfere with, disrupt, negatively affect or inhibit other users from fully enjoying the Service, or that could damage, disable, overburden or impair the functioning of the Service in any manner.</li>\n                        <li>Develop, utilize, or disseminate any software, or interact with any API in any manner, that could damage, harm, or impair the Service.</li>\n                        <li>Reverse engineer any aspect of the Service, or do anything that might discover source code or bypass or circumvent measures employed to prevent or limit access to any Service, area or code of the Service.</li>\n                        <li>Attempt to circumvent any content-filtering techniques we employ, or attempt to access any feature or area of the Service that you are not authorized to access.</li>\n                        <li>Use any robot, spider, crawler, scraper, script, browser extension, offline reader or other automated means or interface not authorized by us to access the Service, extract data or otherwise interfere with or modify the rendering of Service pages or functionality.</li>\n                        <li>Use data collected from our Service to contact individuals, companies, or other persons or entities.</li>\n                        <li>Use data collected from our Service for any direct marketing activity (including without limitation, email marketing, SMS marketing, telemarketing, and direct marketing);</li>\n                        <li>Bypass or ignore instructions that control all automated access to the Service.</li>\n                        <li>Use the Service for any illegal or unauthorized purpose, or engage in, encourage, or promote any activity that violates these Terms.</li>\n                        <li>Use the Polygon Platform to carry out any illegal activities, including but not limited to money laundering, terrorist financing or deliberately engaging in activities designed to adversely affect the performance of the Polygon Platform, or the Service.</li>\n                        <li>Engage in wash trading or other deceptive or manipulative trading activities,</li>\n                        <li>Place misleading bids or offers.</li>\n                        <li>Use the Service to carry out any financial activities subject to registration or licensing, including but not limited to creating, listing, or buying securities, commodities, options, real estate, or debt instruments; or</li>\n                        <li>Use the Service to participate in fundraising for a business, protocol, or platform, including but not limited to creating, listing, or buying assets that are redeemable for financial instruments, assets that give owners’ rights to participate in an ICO or any securities offering, or assets that entitle owners to financial rewards, including but not limited to, DeFi yield bonuses, staking bonuses, and burn discounts.</li>\n                    </ul>\n                    <p>These policies are made to ensure that our marketplace offers the widest selection of assets possible while promoting trust and respect, as well as adherence to the law.</p>\n                    <h4>Delisting. </h4><p>WHE may exercise judgment in allowing or disallowing certain assets, listings, smart contracts, and collections consistent with the spirit of openness in a worldwide community of users of a radical new technology. We carefully consider the complete situation and all its details in light of our policies before deciding to remove inappropriate assets, listings, smart contracts, and collections when we discover them, or they're brought to our attention.</p>\n                    <p>Assets, listings, smart contracts, and collections that WHE deems inappropriate, disruptive, or illegal are prohibited on WHE. WHE reserves the rights to determine the appropriateness of listings on its site and remove any listing at any time. If you create or offer an asset, listing, smart contract, or collection in violation of these policies, we will take corrective actions, as appropriate, including but not limited to removing the asset, listing, smart contract, or collection, deleting your WHE account, and permanently withholding referral payments and developer revenue sharing fees. WHE cannot destroy or impound your assets or smart contracts, but we reserve the right to destroy inappropriate metadata stored on our servers.</p>\n                    <p>Assets, listings, smart contracts, and collections that include metadata that violates international or intellectual property laws, promotes suicide or self-harm, incites hate or violence against others, degrades or doxes another individual, depicts minors in sexually suggestive situations, or is otherwise illegal are prohibited on WHE and will be removed.</p>\n                    <p>Assets, listings, smart contracts, and collections with a primary or substantial purpose in a game or application that violates international or United States intellectual property laws, promotes suicide or self-harm, incites hate or violence against others, degrades or doxes another individual, depicts minors in sexually suggestive situations, or is otherwise illegal in the United States are prohibited on WHE and will be removed.</p>\n                    <p>Assets, listings, smart contracts, and collections created or used primarily or substantially for the purpose of raising funds for the known terrorist organizations are prohibited on WHE and will be removed.</p>\n                    <p>The sale of stolen assets, assets taken without authorization, and otherwise illegally obtained assets on WHE is prohibited. If you have reason to believe that an asset listed on WHE was illegally obtained, please contact us immediately. Listing illegally obtained assets may result in your listings being cancelled, your assets being hidden, or your account being suspended.</p>\n                    <p>\nWe require all users to be 18 years old or older. If you are under 18, you may use a parent or guardian's WHE account, but only with involvement of the account holder. However, the account holder is responsible for everything done with that account.</p>\n                    <p>\nNSFW content is meant for people who are 18 years and older. We allow the sale of this content, but it is subject to being marked NSFW and handled differently than non-NSFW content in navigation menus and search results. Asset names, listings and their descriptions, smart contract names, and collections including profanity or overtly sexual content are prohibited on WHE and will be removed. </p>\n                    <p>Do not create or list illegal or offensive content, such as products that depict graphic sexual acts and images that depict children under the age of 18 in a sexually suggestive manner. Do not use profanity or graphic language in any content you list or create on WHE.</p>\n                    <p>If you become aware of the creation, listing, or buying of assets in violation of any of the terms specified in this section, you shall contact us to report it. Creators bear special responsibility for informing WHE of the existence of their collections, contracts, and assets that violate these terms.</p>\n                    <h1>User Information and Copyright</h1>\n                    <p>You retain your rights and are solely responsible for your use of the Services and for any User Information you provide, including compliance with applicable laws, rules, and regulations. We take no responsibility for the User Information posted or listed via the Services.</p>\n                    <h4>Granting us a License.</h4>\n                    <p>By submitting, posting or displaying User Information on or through the Services, you grant us a worldwide, non-exclusive, sublicensable, royalty-free license to use, copy, modify, and display any text, content, files, communications, comments, feedback, suggestions, ideas, concepts, questions, data or other content that you submit or post on or through the Services or through tools or applications we provide for posting or sharing such content (collectively “User Information”) for our lawful business purposes, including to provide, promote, and improve the Services.</p>\n                    <h4>Representation and Warrant regarding User Information. </h4>\n                    <p>You represent and warrant that you have, or have obtained, all rights, licenses, consents, permissions, power and/or authority necessary to grant the rights granted herein for any User Information that you submit, post or display on or through the Services. You agree that such User Information will not contain material subject to copyright or other proprietary rights, unless you have necessary permission or are otherwise legally entitled to post the material and to grant WHE the license described above.</p>\n                    <h4>Right to remove content without prior notice.</h4>\n                    <p>WHE reserves the right to remove content without prior notice. WHE will take down works in response to formal infringement claims and will terminate a user's access to the Services if the user is determined to be a repeat infringer.</p>\n                    <h1>Indemnification</h1>\n                    <p>To the fullest extent permitted by applicable law, you agree to indemnify, defend and hold harmless WHE, and our respective past, present and future employees, officers, directors, contractors, consultants, equity holders, suppliers, vendors, service providers, parent companies, subsidiaries, affiliates, agents, representatives, predecessors, successors and assigns (individually and collectively, the “WHE Parties”), from and against all actual or alleged third party claims, damages, awards, judgments, losses, liabilities, obligations, penalties, interest, fees, expenses (including, without limitation, attorneys’ fees and expenses) and costs (including, without limitation, court costs, costs of settlement and costs of pursuing indemnification and insurance), of every kind and nature whatsoever, whether known or unknown, foreseen or unforeseen, matured or unmatured, or suspected or unsuspected, in law or equity, whether in tort, contract or otherwise (collectively, “Claims”), including, but not limited to, damages to property or personal injury, that are caused by, arise out of or are related to (a) your use or misuse of the Service, User Information or Crypto Assets, (b) any feedback you provide, (c) your violation of these Terms, and (d) your violation of the rights of a third party, including another user or MetaMask. You agree to promptly notify WHE of any third party Claims and cooperate with the WHE Parties in defending such Claims. You further agree that the WHE Parties shall have control of the defense or settlement of any third party Claims. THIS INDEMNITY IS IN ADDITION TO, AND NOT IN LIEU OF, ANY OTHER INDEMNITIES SET FORTH IN A WRITTEN AGREEMENT BETWEEN YOU AND WHE.</p>\n                    <h1>Disclaimers</h1>\n                    <p>except as expressly provided to the contrary in a writing by WHE, the service, content contained therein, and crypto assets listed therein are provided on an “as is” and “as available” basis without warranties or conditions of any kind, either express or implied. WHE (and its suppliers) make no warranty that the service: (a) will meet your requirements; (b) will be available on an uninterrupted, timely, secure, or error-free basis; or (c) will be accurate, reliable, complete, legal, or safe. WHE disclaims all other warranties or conditions, express or implied, including, without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, title and non-infringement as to the service, content contained therein. WHE does not represent or warrant that content on the service is accurate, complete, reliable, current, or error-free. we will not be liable for any loss of any kind from any action taken or taken in reliance on material or information, contained on the service. while WHE attempts to make your access to and use of the service and content safe, WHE cannot and does not represent or warrant that the service, content, any crypto assets listed on our service, or our servers are free of viruses or other harmful components. we cannot guarantee the security of any data that you disclose online. you accept the inherent security risks of providing information and dealing online over the internet and will not hold us responsible for any breach of security unless it is due to our gross negligence.</p>\n                    <p>we will not be responsible or liable to you for any loss and take no responsibility for, and will not be liable to you for, any use of crypto assets, including but not limited to any losses, damages or claims arising from: (a) user error such as forgotten passwords, incorrectly constructed transactions, or mistyped addresses; (b) server failure or data loss; (c) corrupted wallet files; (d) unauthorized access to applications; (e) any unauthorized third party activities, including without limitation the use of viruses, phishing, brute forcing or other means of attack against the service or crypto assets.</p>\n                    <p>crypto assets are intangible digital assets. they exist only by virtue of the ownership record maintained in the Polygon network. any transfer of title that might occur in any unique digital asset occurs on the decentralized ledger within the Polygon platform. we do not guarantee that WHE or any WHE party can effect the transfer of title or right in any crypto assets.</p>\n                    <p>WHE is not responsible for sustained casualties due to vulnerability or any kind of failure, abnormal behavior of software (e.g., wallet, smart contract), blockchains or any other features of the crypto assets. WHE is not responsible for casualties due to late report by developers or representatives (or no report at all) of any issues with the blockchain supporting crypto assets including forks, technical node issues or any other issues having fund losses as a result.\nnothing in these terms shall exclude or limit liability of either party for fraud, death or bodily injury caused by negligence, violation of laws, or any other activity that cannot be limited or excluded by legitimate means.</p>\n                    <p>some jurisdictions do not allow the exclusion of implied warranties in contracts with consumers, so the above exclusion may not apply to you.</p>\n                    <h1>Assumption of Risk</h1>\n                    <p>You accept and acknowledge:</p>\n                    <h4>Volatility.</h4>\n                    <p>The prices of Crypto Assets are extremely volatile. Fluctuations in the price of other digital assets could materially and adversely affect the Crypto Assets, which may also be subject to significant price volatility. It cannot be guaranteed that any purchasers of Crypto Assets will not lose money.</p>\n                    <h4>Taxation.</h4>\n                    <p>You are solely responsible for determining what, if any, taxes apply to your Crypto Assets transactions. Neither WHE nor any other WHE Party is responsible for determining the taxes that apply to Crypto Assets transactions.</p>\n                    <h4>Change of Ownership Over a Crypto Asset.</h4>\n                    <p>Our Service does not store, send, or receive Crypto Assets. The transfer of ownership over Crypto Assets occurs within a supporting blockchain and not through our Service.</p>\n                    <h4>Inherent risks while exchanging Crypto Assets.</h4>\n                    <p>There are risks associated with transacting with Blockchain based assets such as Crypto Assets, including but not limited to, the risk of hardware, software and Internet connections, the risk of malicious software introduction, and the risk that third parties may obtain unauthorized access to information stored within your wallet. You accept and acknowledge that WHE will not be responsible for any communication failures, disruptions, errors, distortions or delays you may experience when using the Crypto Assets, however caused. The regulatory regime governing blockchain technologies, cryptocurrencies, and tokens is uncertain, and new regulations or policies may materially adversely affect the development of the Auction and/or Service and the utility of Crypto Assets.</p>\n                    <h4>Service Depending on Third Party Service Providers.</h4>\n                    <p>The Service relies on third-party platforms to perform the transactions for the Auction of Crypto Assets. Changes in the way these third-party service providers provide these services may materially affect the Service we provide.</p>\n                    <h4>No Warranty regarding the Crypto Assets and WHE’s rights to restrict usage of a Crypto Asset - </h4>\n                    <p>There are risks associated with purchasing user generated content, including but not limited to, the risk of purchasing counterfeit assets, mislabeled assets, assets that are vulnerable to metadata decay, assets on smart contracts with bugs, and assets that may become untransferable. WHE reserves the right to hide collections, contracts, and assets affected by any of these issues or by other issues. Assets you purchase may become inaccessible on WHE. Under no circumstances shall the inability to view your assets on WHE serve as grounds for a claim against WHE.</p>\n                    <h1>Limitation of Liability</h1>\n                    <p>to the fullest extent permitted by law, in no event will WHE be liable to you or any third party for any lost profit or any indirect, consequential, exemplary, incidental, special or punitive damages arising from these terms, the service, products or third party sites and products, or for any damages related to loss of revenue, loss of profits, loss of business or anticipated savings, loss of use, loss of goodwill, or loss of data, and whether caused by tort (including negligence), breach of contract, or otherwise, even if foreseeable and even if WHE has been advised of the possibility of such damages. access to, and use of, the services, products or third-party sites and products are at your own discretion and risk, and you will be solely responsible for any damage to your computer system or mobile device or loss of data resulting therefrom.</p>\n                    <p>notwithstanding anything to the contrary contained herein, in no event shall the maximum aggregate liability of WHE arising out of or in any way related to these terms, the access to and use of the service, content, crypto assets, or any products or services purchased on the service exceed the greater of (a) $100 or (b) the amount received by WHE from the sale of crypto assets that are the subject of the claim</p>\n                    <p>the foregoing limitations of liability shall not apply to liability of WHE for (a) death or personal injury caused by a member of WHE’s negligence; or for (b) any injury caused by a member of WHE’s fraud or fraudulent misrepresentation</p>\n                    <p>Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so the above limitation or exclusion may not apply to you. Some jurisdictions also limit disclaimers or limitations of liability for personal injury from consumer products, so this limitation may not apply to personal injury claims.</p>\n                    <h4>Modifications to the Service</h4>\n                    <p>We reserve the right in our sole discretion to modify, suspend or discontinue, temporarily or permanently, the Services (or any features or parts thereof) or suspend or discontinue the Auction at any time and without liability, therefore.</p>\n                    <h4>Dispute Resolution; Arbitration.</h4>\n                    <h4>Governing Law and Venue</h4>\n                    <p>These Terms, your access to and use of the Service and Content, and your participation in the Auction shall be governed by and construed and enforced in accordance with the laws of St. Vincent And the Grenadines , without regard to conflict of law rules or principles of the St. Vincent And the Grenadines , or any other jurisdiction) that would cause the application of the laws of any other jurisdiction that would cause the application of the laws of any other jurisdiction. Any dispute between the parties that is not subject to arbitration or cannot be heard in small claims court, shall be resolved in accordance to provision 19.</p>\n                    <h4>Termination</h4>\n                    <p>Notwithstanding anything contained in these Terms, we reserve the right, without notice and in our sole discretion, to terminate your right to access or use the Service at any time and for any or no reason, and you acknowledge and agree that we shall have no liability or obligation to you in such event and that you will not be entitled to a refund of any amounts that you have already paid to us, to the fullest extent permitted by applicable law.</p>\n                    <h4>Severability</h4>\n                    <p>If any term, clause, or provision of these Terms is held invalid or unenforceable, then that term, clause or provision will be severable from these Terms and will not affect the validity or enforceability of any remaining part of that term, clause or provision, or any other term, clause or provision of these Terms.</p>\n                    <h4>Survival</h4>\n                    <p>The following sections will survive the expiration or termination of these Terms and the termination of your Account: all defined terms and Sections 1-4 and 7-19.</p>\n                    <h4>Miscellaneous</h4>\n                    <p>These Terms along with the Auction Rules constitute the entire agreement between you and WHE relating to your access to and use of the Services and Content, and your participation in the Auction. These Terms, and any rights and licenses granted hereunder, may not be transferred, or assigned by you without the prior written consent of WHE prior, concurrent, or subsequent circumstance, and WHE’s failure to assert any right or provision under these Terms shall not constitute a waiver of such right or provision. Except as otherwise provided herein, these Terms is intended solely for the benefit of the parties and are not intended to confer third party beneficiary rights upon any other person or entity.</p>\n\n                </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\r\n\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from \"../Components/Header/Header\";\r\n\r\nimport Footer from \"../Components/Footer/Footer\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Navigate,\r\n    BrowserRouter,\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport Index_main from \"../Components/Index_main\";\r\n\r\nimport Collection_main from \"../Components/Collection_main\";\r\nimport Benefits_main from \"../Components/Benefits_main\";\r\nimport Road_main from \"../Components/Road_main\";\r\nimport Mint_main from \"../Components/Mint_main\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Terms from \"../Components/Terms/Terms\";\r\nimport Privacy_Policy from \"../Components/Privacy_Policy/Privacy_Policy\";\r\nimport ModelOpen from \"../Components/Mint/ModelOpen\";\r\nimport './Mint/Mint.css';\r\n\r\nexport default function BSC_Minting() {\r\n    return (\r\n        <div>\r\n            <div class=\"breadcrumb-area\" >\r\n                <div className='second_img'>\r\n                    <div class=\"container h-100\">\r\n                        <div class=\"row h-100 align-items-center justify-content-center\">\r\n                            <div class=\"col-lg-5\">\r\n                                <div class=\"breadcrumb-title text-center\">\r\n                                    <h2>Mint</h2>\r\n                                    <ul class=\"breadcrumb-list\">\r\n                                        <li>Home</li>\r\n                                        <li><i class=\"fas fa-angle-double-right\"></i></li>\r\n                                        <li>Mint</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mint\">\r\n\r\n\r\n\r\n                <div className=\"container\">\r\n\r\n                    <h1>Please Select  BlockChain Network</h1>\r\n                    <div className=\"main_div_btn_here\">\r\n\r\n                        <div className=\"btn-area1 mt-5 \">\r\n                            <Link to=\"/Minting_With_BSC\"> <a class=\"btn btn_main_mint fs-2\" >\r\n                                BSC\r\n                            </a></Link>\r\n                        </div>\r\n\r\n                        <div className=\"btn-area1 mt-5\">\r\n                            <Link to=\"/Main_polygon\"> <a class=\"btn btn_main_mint2 fs-2 \">\r\n                                Polygon\r\n                            </a></Link>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './Create_sell_nft.css'\r\n\r\nexport default function Create_sell_nft() {\r\n  return (\r\n    <div>\r\n      <section class=\"dark:bg-jacarta-800 Create_sell_nft_div relative py-24\">\r\n        <picture class=\"pointer-events-none absolute inset-0 -z-10 dark:hidden\">\r\n          {/* <img\r\n            src=\"bg3.png\"\r\n            alt=\"gradient\"\r\n            class=\"h-full\"\r\n          /> */}\r\n        </picture>\r\n        <div class=\"container\">\r\n          <h2 class=\"font-display text-jacarta-700 mb-16 text-center text-3xl dark:text-white\">\r\n            Create and sell your NFTs\r\n          </h2>\r\n          <div class=\"grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-4\">\r\n            <div class=\"text-center\">\r\n              <div class=\"mb-6 inline-flex rounded-full bg-[#CDBCFF] p-3\">\r\n                <div class=\"bg-accent inline-flex h-12 w-12 items-center justify-center rounded-full\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    class=\"h-5 w-5 fill-white\"\r\n                  >\r\n                    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                    <path d=\"M22 6h-7a6 6 0 1 0 0 12h7v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v2zm-7 2h8v8h-8a4 4 0 1 1 0-8zm0 3v2h3v-2h-3z\"></path>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <h3 class=\"font-display text-jacarta-700 mb-4 text-lg dark:text-white\">\r\n                1. Set up your wallet\r\n              </h3>\r\n              <p class=\"txt_black\">\r\n                Once you've set up your wallet of choice, connect it to\r\n                OpenSea by clicking the NFT Marketplace in the top right corner.\r\n              </p>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <div class=\"mb-6 inline-flex rounded-full bg-[#C4F2E3] p-3\">\r\n                <div class=\"bg-green inline-flex h-12 w-12 items-center justify-center rounded-full\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    class=\"h-5 w-5 fill-white\"\r\n                  >\r\n                    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                    <path d=\"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"></path>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <h3 class=\"font-display text-jacarta-700 mb-4 text-lg dark:text-white\">\r\n                2. Create Your Collection\r\n              </h3>\r\n              <p class=\"txt_black\">\r\n                Click Create and set up your collection. Add social links, a\r\n                description, profile &amp; banner images, and set a secondary\r\n                sales fee.\r\n              </p>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <div class=\"mb-6 inline-flex rounded-full bg-[#CDDFFB] p-3\">\r\n                <div class=\"bg-blue inline-flex h-12 w-12 items-center justify-center rounded-full\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    class=\"h-5 w-5 fill-white\"\r\n                  >\r\n                    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                    <path d=\"M17.409 19c-.776-2.399-2.277-3.885-4.266-5.602A10.954 10.954 0 0 1 20 11V3h1.008c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3H6V1h2v4H4v7c5.22 0 9.662 2.462 11.313 7h2.096zM18 1v4h-8V3h6V1h2zm-1.5 9a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"></path>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <h3 class=\"font-display text-jacarta-700 mb-4 text-lg dark:text-white\">\r\n                3. Add Your NFTs\r\n              </h3>\r\n              <p class=\"txt_black\">\r\n                Upload your work (image, video, audio, or 3D art), add a title\r\n                and description, and customize your NFTs with properties, stats.\r\n              </p>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <div class=\"mb-6 inline-flex rounded-full bg-[#FFD0D0] p-3\">\r\n                <div class=\"bg-red inline-flex h-12 w-12 items-center justify-center rounded-full\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    class=\"h-5 w-5 fill-white\"\r\n                  >\r\n                    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                    <path d=\"M10.9 2.1l9.899 1.415 1.414 9.9-9.192 9.192a1 1 0 0 1-1.414 0l-9.9-9.9a1 1 0 0 1 0-1.414L10.9 2.1zm2.828 8.486a2 2 0 1 0 2.828-2.829 2 2 0 0 0-2.828 2.829z\"></path>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <h3 class=\"font-display text-jacarta-700 mb-4 text-lg dark:text-white\">\r\n                4. List Them For Sale\r\n              </h3>\r\n              <p class=\"txt_black\">\r\n                Choose between auctions, fixed-price listings, and\r\n                declining-price listings. You choose how you want to sell your\r\n                NFTs!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BSC_Minting from \"./BSC_Minting\";\r\nimport Bsc_mint_home from \"./Bsc_mint_home\";\r\nimport Create_sell_nft from \"./Create_sell_nft/Create_sell_nft\";\r\nimport Crypto from \"./Crypto/Crypto\";\r\nimport Explore from \"./Explore/Explore\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Front from \"./Front/Front\";\r\nimport Front2 from \"./Front2/Front2\";\r\nimport Front3 from \"./Front3/Front3\";\r\nimport Front4 from \"./Front4/Front4\";\r\nimport Header from \"./Header/Header\";\r\nimport Mint from \"./Mint/Mint\";\r\nimport Mint_polygon from \"./Mint_Polygon/Mint_polygon\";\r\nimport Mint_2 from \"./Mint_2/Mint_2\";\r\n// import Explore from \"./Explore/Explore\";\r\nimport Road from \"./Road/Road\";\r\nimport Slide from \"./Slide/Slide\";\r\n\r\nexport default function Index_main({chainid}) {\r\n  let chain_id_here=chainid\r\n  return (\r\n    <div className=\"App\">\r\n      <Front />\r\n      <Front2 />\r\n      {/* <Front3 /> */}\r\n      <Front4 />\r\n     {/* <Bsc_mint_home/> */}\r\n     \r\n      {/* <Crypto /> */}\r\n      {/* <Explore /> */}\r\n      {/* <Road /> */}\r\n      {/* <Mint_2 /> */}\r\n      <Create_sell_nft />\r\n      {/* <Slide /> */}\r\n    </div>\r\n  );\r\n}\r\n","import { ethers } from \"ethers\";\nimport { loadWeb3 } from \"./api\";\nlet privateKey = process.env.REACT_APP_KEY;\nexport const getSignatureTest = async (contract, user, val) => {\n  let sigdataArr = [];\n\n  // let user = await loadWeb3()\n\n  // let contract = \"0x8E37ffA5eD617E0764Fb9CEd25485720B8fc7f71\"; //BerryClubContract\n  // user = \"0xAD4f1d02ad3e819AD86D3eD27dfd13F31A19a09a\"; //user_address\n\n  //   const RPC = \"https://api.avax-test.network/ext/bc/C/rpc\";\n  const RPC = \"https://bsc-dataseed1.binance.org\";\n\n  const provider = new ethers.providers.JsonRpcProvider(RPC);\n  const blockNumber = await provider.getBlockNumber();\n\n  const nonce = (await provider.getBlock(blockNumber)).timestamp;\n  // console.log(\"nonce-timestamp:\", nonce);\n  sigdataArr.push(nonce);\n\n  let hash = ethers.utils.solidityKeccak256(\n    [\"string\", \"string\", \"uint256\", \"uint256\"],\n    [contract.toLowerCase(), user.toLowerCase(), nonce, val]\n  );\n  // console.log(\"hash:\", hash);\n\n  // 0x7A2c3552006A39926f576f8568984b3834Cc2E49 - signer address\n\n  const signingKey = new ethers.utils.SigningKey(privateKey);\n  let deployTx = signingKey.signDigest(hash);\n\n  const signature = ethers.utils.joinSignature(deployTx);\n  sigdataArr.push(signature);\n  // console.log(\"sigdataArr\", sigdataArr);\n  return sigdataArr;\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_100,\r\n  ULE_NFT_100_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getSignatureTest } from \"../../apis/signature\";\r\n\r\nexport default function Mint_With_100() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n  let [imageArray, setImageArray] = useState([]);\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    let acc = await loadWeb3();\r\n    let simplleArray = [];\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n        //changes to ////\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_100_ABI,\r\n            ULE_NFT_100\r\n          );\r\n\r\n          let uleContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods.maxBatchSize().call();\r\n          // let signature = await getSignatureTest(acc);\r\n          // console.log(\"signature\", signature);\r\n          // console.log(\"totalnft\", totalnft);\r\n          // let balance = web3.eth.getAccount();\r\n          let accountBalance = await web3.eth.getBalance(acc);\r\n          // console.log(\"account\", account);\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let maxSupply = await nftContractOf.methods.collectionSize().call();\r\n\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .maxBatchSize()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            let mintingULEPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n            );\r\n\r\n            mintingULEPrice =\r\n              value * mintingULEPrice?.data?.data[0]?.usdperunit * 100;\r\n\r\n            mintingULEPrice = parseInt(mintingULEPrice).toFixed(0);\r\n            mintingULEPrice = web3.utils.toWei(mintingULEPrice);\r\n            let mintingBNBPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n            );\r\n\r\n            mintingBNBPrice =\r\n              value * mintingBNBPrice?.data?.data[0]?.usdperunit * 100;\r\n\r\n            mintingBNBPrice = web3.utils.toWei(\r\n              parseFloat(mintingBNBPrice).toString()\r\n            );\r\n            // let val = 0.00001;\r\n            // mintingBNBPrice = web3.utils.toWei(parseFloat(val).toString());\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (value < parseInt(maxLimitprTransaction)) {\r\n                if (parseFloat(accountBalance) > parseFloat(mintingBNBPrice)) {\r\n                  await uleContractOf.methods\r\n                    .approve(ULE_NFT_100, mintingULEPrice)\r\n                    .send({\r\n                      from: acc,\r\n                    });\r\n                  toast.success(\"Approve Confirmed\");\r\n                  let signature = await getSignatureTest(\r\n                    ULE_NFT_100,\r\n                    acc,\r\n                    mintingULEPrice\r\n                  );\r\n                  let data_value = value;\r\n                  let hash = await nftContractOf.methods\r\n                    .Mint(\r\n                      data_value,\r\n                      mintingULEPrice,\r\n                      signature[0],\r\n                      signature[1]\r\n                    )\r\n                    .send({\r\n                      from: acc,\r\n                      value: mintingBNBPrice,\r\n                    });\r\n                  let walletOfOwner100 = await nftContractOf.methods\r\n                    .WalletOfOwner(acc)\r\n                    .call();\r\n                  console.log(\"walletOfOwner\", walletOfOwner100);\r\n\r\n                  let LastIndex_array = walletOfOwner100.slice(1).slice(-value);\r\n                  let walletLength = LastIndex_array.length;\r\n                  console.log(\"walletOfOwner\", walletLength);\r\n                  for (let i = 0; i < walletLength; i++) {\r\n                    try {\r\n                      let res = await axios.get(\r\n                        `https://usdulenft.mypinata.cloud/ipfs/QmdHtZGQU4FPBfytDAEyKYCqXHcNtzWSM6ymPuWVRnVR5Q/${walletOfOwner100[i]}.gif`\r\n                      );\r\n                      let imageUrl = res.config.url;\r\n                      setImgeURL(imageUrl);\r\n                      console.log(\"check\", res, imageUrl);\r\n\r\n                      let dna = walletOfOwner100[i];\r\n                      simplleArray = [\r\n                        ...simplleArray,\r\n                        { imageUrl: imageUrl, num: dna },\r\n                      ];\r\n                      setImageArray(simplleArray);\r\n                    } catch (e) {\r\n                      console.log(\"Error while Fetching Api\", e);\r\n                    }\r\n                  }\r\n                  setShowModal(true);\r\n                  toast.success(\"Transaction Confirmed\");\r\n\r\n                  //   hash = hash.transactionHash\r\n                  let postapi = await axios.post(\r\n                    \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                    {\r\n                      uid: \"101010\",\r\n                      address: acc,\r\n                      nft: value,\r\n                      token: mintingULEPrice,\r\n                      usd: \"200\",\r\n                      nftcontract: ULE_NFT_100,\r\n                      url: ImgeURL,\r\n                      //   \"txn\": hash\r\n                    }\r\n                  );\r\n\r\n                  console.log(\"postapi\", postapi);\r\n                  toast.success(\"Success\", postapi.data.data);\r\n\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                  setinputdatahere(\" \");\r\n                } else {\r\n                  toast.info(\"You're balance is Low\");\r\n                }\r\n              } else {\r\n                toast.error(\r\n                  \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                );\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  // const myMintBUSD = async () => {\r\n  //   let acc = await loadWeb3();\r\n  //   setShowModal3(false);\r\n\r\n  //   // console.log(\"ACC=\",acc)\r\n  //   if (acc == \"No Wallet\") {\r\n  //     toast.error(\"No Wallet Connected\");\r\n  //   } else if (acc == \"Wrong Network\") {\r\n  //     toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n  //   } else {\r\n  //     try {\r\n  //       // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n  //       let res = await axios.get(\r\n  //         `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n  //       );\r\n  //       // console.log(\"resdatahere\", res.data.data);\r\n  //       res = res.data.data;\r\n  //       if (res == 1) {\r\n  //         try {\r\n  //           setButtonThree(\"Please Wait While Processing\");\r\n  //           // console.log(\"mintFor BUSD\");\r\n  //           const web3 = window.web3;\r\n  //           let nftContractOf = new web3.eth.Contract(\r\n  //             wireNftContractAbi,\r\n  //             wireNftContractAddress\r\n  //           );\r\n  //           let busdContractOf = new web3.eth.Contract(\r\n  //             busdNftTokenAbi,\r\n  //             busdNftTokenAddress\r\n  //           );\r\n  //           let userBusdBalance = await busdContractOf.methods\r\n  //             .balanceOf(acc)\r\n  //             .call();\r\n\r\n  //           userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n  //           console.log(\"userBusdBalance\", userBusdBalance);\r\n  //           let totalnft = await nftContractOf.methods\r\n  //             .MaxLimitPerTransaction()\r\n  //             .call();\r\n\r\n  //           // console.log(\"totalnft\", totalnft);\r\n  //           if (value > totalnft) {\r\n  //             toast.error(`Maximum Limit is ${totalnft} `);\r\n  //           } else {\r\n  //             let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n  //             let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n  //             let paused = await nftContractOf.methods.paused().call();\r\n  //             let maxLimitprTransaction = await nftContractOf.methods\r\n  //               .MaxLimitPerTransaction()\r\n  //               .call();\r\n  //             let mintingBusdPrice = await nftContractOf.methods\r\n  //               .MinitngPricein_token()\r\n  //               .call();\r\n\r\n  //             // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n  //             mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n  //             // setMintPriceBUSD(mintingBusdPrice)\r\n  //             let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n  //             // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n  //             console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n  //             // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n  //             // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n  //             let llisted_check = await nftContractOf.methods\r\n  //               .iswhitelist(acc)\r\n  //               .call();\r\n  //             // console.log(\"iswhitelist\", llisted_check);\r\n\r\n  //             // if (llisted_check == 'true') {\r\n\r\n  //             if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n  //               if (paused == false) {\r\n  //                 if (value < parseInt(maxLimitprTransaction)) {\r\n  //                   if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n  //                     // console.log(\"Minting Value= \", value);\r\n  //                     // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n  //                     // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n  //                     // BusdPrice = parseFloat(BusdPrice)\r\n  //                     // let b = BusdPrice * value;\r\n\r\n  //                     totalMintingPriceBusd = web3.utils.toWei(\r\n  //                       totalMintingPriceBusd.toString()\r\n  //                     );\r\n  //                     //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n  //                     await busdContractOf.methods\r\n  //                       .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n  //                       .send({\r\n  //                         from: acc,\r\n  //                       });\r\n  //                     setButtonThree(\"Please Wait For Second Confirmation\");\r\n  //                     toast.success(\"Transaction Confirmed\");\r\n  //                     let hash = await nftContractOf.methods\r\n  //                       .mint_with_BUSD(value, totalMintingPriceBusd)\r\n  //                       .send({\r\n  //                         from: acc,\r\n  //                       });\r\n  //                     toast.success(\"Transaction Confirmed\");\r\n\r\n  //                     hash = hash.transactionHash;\r\n  //                     let postapi = await axios.post(\r\n  //                       \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n  //                       {\r\n  //                         uid: inputdatahere,\r\n  //                         address: acc,\r\n  //                         nft: value,\r\n  //                         token: totalMintingPriceBusd,\r\n  //                         txn: \"vgd54\",\r\n  //                       }\r\n  //                     );\r\n\r\n  //                     setButtonThree(\"Mint With Busd\");\r\n  //                     toast.success(\"Transaction Succefful\");\r\n  //                     // console.log(\"postapi\", postapi);\r\n  //                     toast.success(\"Success\", postapi.data.data);\r\n  //                     setinputdatahere(\" \");\r\n  //                   } else {\r\n  //                     toast.error(\"Out Of Balance\");\r\n  //                     setButtonThree(\"Mint With Busd\");\r\n  //                   }\r\n  //                 } else {\r\n  //                   toast.error(\r\n  //                     \"No of Minting is Greater than maximum limit Per Transaction\"\r\n  //                   );\r\n  //                   setButtonThree(\"Mint With Busd\");\r\n  //                 }\r\n  //               } else {\r\n  //                 toast.error(\"Paused is False\");\r\n  //                 setButtonThree(\"Mint With Busd\");\r\n  //               }\r\n  //             } else {\r\n  //               toast.error(\"Max Supply is Greater than total Supply\");\r\n  //               setButtonThree(\"Mint With Busd\");\r\n  //             }\r\n  //             // }\r\n  //             // else {\r\n  //             //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n  //             //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n  //             //         from: acc\r\n  //             //     })\r\n\r\n  //             //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n  //             //         from: acc,\r\n  //             //     })\r\n  //             //     toast.success(\"Transaction Confirmed\")\r\n\r\n  //             //     hash = hash.transactionHash\r\n  //             //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n  //             //         \"uid\": inputdatahere,\r\n  //             //         \"address\": acc,\r\n  //             //         \"nft\": value,\r\n  //             //         \"token\": totalMintingPriceBusd,\r\n  //             //         \"txn\": \"xsdd44\"\r\n  //             //     })\r\n\r\n  //             //     // console.log(\"postapi\", postapi);\r\n  //             //     toast.success(\"Success\", postapi.data.data)\r\n\r\n  //             //     setButtonThree(\"Mint With Busd\")\r\n  //             //     setinputdatahere(\" \")\r\n\r\n  //             // }\r\n  //           }\r\n  //         } catch (e) {\r\n  //           console.log(\"Error while minting \", e);\r\n  //           toast.error(\"Transaction failed BUSD\");\r\n  //           setButtonThree(\"Mint With Busd\");\r\n  //         }\r\n  //       } else {\r\n  //         toast.error(\"User Is Not Exists\");\r\n  //         setinputdatahere(\" \");\r\n  //       }\r\n  //     } catch (e) {\r\n  //       console.log(\"User Is Not Exists\", e);\r\n  //       toast.error(\"Error While Fatching Get API\");\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_100_ABI, ULE_NFT_100);\r\n      //   let mintingBusdPrice = await nftContractOf.methods\r\n      //     .MinitngPricein_token()\r\n      //     .call();\r\n      let mintingBusdPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePric = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePric = web3.utils.fromWei(mintingWirePric)\r\n      // console.log(\"mintingWirePric\",mintingWirePric);\r\n      // mintingWirePrice = mintingWirePrice[1]\r\n      //   let mintingWirePrice = await axios.get(\r\n      //     \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      //   );\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n      );\r\n      console.log(\"YULE \", mintingWirePrice?.data?.data[0]?.usdperunit);\r\n      mintingWirePrice = mintingWirePrice?.data?.data[0]?.usdperunit;\r\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      //   let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n      let mintingbnbPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  //   const Sponser = () => {\r\n\r\n  //       setShowModal(true)\r\n  //       if (showModal == true) {\r\n\r\n  //       }\r\n  //   }\r\n  //   const Sponser2 = () => {\r\n\r\n  //       setShowModal2(true)\r\n\r\n  //   }\r\n  //   const Sponser3 = () => {\r\n\r\n  //       setShowModal3(true)\r\n\r\n  //   }\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 100 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n              {imageArray.map((items, idex) => {\r\n                return (\r\n                  <div class=\"col-sm-6 col-lg-4\">\r\n                    <div class=\"single-live-auction home-2\">\r\n                      <div class=\" home-2\">\r\n                        <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\r\n                      </div>\r\n\r\n                      <div class=\"collection-text home-2 text-center\">\r\n                        <a href=\"#\">\r\n                          {/* YULE NFT ID:{items.token_id}, {items.num} USD */}\r\n                          YULE NFT ID: {items.num}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div class=\"row d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                <a\r\n                  class=\"btn close\"\r\n                  style={{ backgroundColor: \"rgb(251, 197, 11)\" }}\r\n                  onClick={() => handleClose()}\r\n                >\r\n                  Close\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_200,\r\n  ULE_NFT_100,\r\n  ULE_NFT_200_ABI,\r\n  ULE_NFT_100_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getSignatureTest } from \"../../apis/signature\";\r\n\r\nexport default function Mint_With_200() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n  let [imageArray, setImageArray] = useState([]);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft}`);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n    let simplleArray = [];\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        //   let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        //   // console.log(\"resdatahere\", res.data.data);\r\n        //   res = res.data.data;\r\n        //   if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_200_ABI,\r\n            ULE_NFT_200\r\n          );\r\n          let uleContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods.maxBatchSize().call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n          let accountBalance = await web3.eth.getBalance(acc);\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let maxSupply = await nftContractOf.methods.collectionSize().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .maxBatchSize()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = mintingWirePrice[1]\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // console.log(\"mintingWirePrice\", mintingWirePrice);\r\n            let mintingULEPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n            );\r\n\r\n            mintingULEPrice =\r\n              value * mintingULEPrice?.data?.data[0]?.usdperunit * 200;\r\n\r\n            mintingULEPrice = parseInt(mintingULEPrice).toFixed(0);\r\n            mintingULEPrice = web3.utils.toWei(mintingULEPrice);\r\n\r\n            let mintingBNBPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n            );\r\n\r\n            mintingBNBPrice =\r\n              value * mintingBNBPrice?.data?.data[0]?.usdperunit * 200;\r\n\r\n            mintingBNBPrice = web3.utils.toWei(\r\n              parseFloat(mintingBNBPrice).toString()\r\n            );\r\n            // let val = 0.00001;\r\n            // mintingBNBPrice = web3.utils.toWei(parseFloat(val).toString());\r\n            // console.log(\"totalMintingPriceWire\", mintingBNBPrice);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (value < parseInt(maxLimitprTransaction)) {\r\n                if (parseFloat(accountBalance) > parseFloat(mintingBNBPrice)) {\r\n                  // console.log(\"Minting Value= \", value);\r\n                  // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                  await uleContractOf.methods\r\n                    .approve(ULE_NFT_200, mintingULEPrice)\r\n                    .send({\r\n                      from: acc,\r\n                    });\r\n                  toast.success(\"Approve Confirmed\");\r\n\r\n                  let signature = await getSignatureTest(\r\n                    ULE_NFT_200,\r\n                    acc,\r\n                    mintingULEPrice\r\n                  );\r\n                  let data_value = value;\r\n                  console.log(\"singanter\", data_value, signature);\r\n                  let hash = await nftContractOf.methods\r\n                    .Mint(\r\n                      data_value,\r\n                      mintingULEPrice,\r\n                      signature[0],\r\n                      signature[1]\r\n                    )\r\n                    .send({\r\n                      from: acc,\r\n                      value: mintingBNBPrice,\r\n                    });\r\n                  let walletOfOwner200 = await nftContractOf.methods\r\n                    .WalletOfOwner(acc)\r\n                    .call();\r\n                  console.log(\"walletOfOwner200\", walletOfOwner200);\r\n\r\n                  let LastIndex_array = walletOfOwner200.slice(1).slice(-value);\r\n                  let walletLength200 = LastIndex_array.length;\r\n                  console.log(\"walletLength200\", walletLength200);\r\n                  // walletLength200=2770+walletLength200;\r\n\r\n                  for (let i = 0; i < walletLength200; i++) {\r\n                    let val = LastIndex_array[i];\r\n\r\n                    let url_num = 2770 + +val;\r\n\r\n                    try {\r\n                      let res = await axios.get(\r\n                        `https://usdulenft.mypinata.cloud/ipfs/QmZfw5joy4ZDhXZiJu5EvRuNYEP38MAYbKcMjWdB3DfwTZ/${url_num}.gif`\r\n                      );\r\n                      // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                      let imageUrl = res.config.url;\r\n                      setImgeURL(imageUrl);\r\n                      console.log(\"check\", res);\r\n                      let dna = url_num;\r\n                      simplleArray = [\r\n                        ...simplleArray,\r\n                        { imageUrl: imageUrl, num: dna },\r\n                      ];\r\n                      setImageArray(simplleArray);\r\n                    } catch (e) {\r\n                      console.log(\"Error while Fetching Api\", e);\r\n                    }\r\n                  }\r\n\r\n                  setShowModal(true);\r\n                  toast.success(\"Transaction Confirmed\");\r\n\r\n                  // hash = hash.transactionHash;\r\n                  let postapi = await axios.post(\r\n                    \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                    {\r\n                      uid: \"101010\",\r\n                      address: acc,\r\n                      nft: value,\r\n                      token: mintingULEPrice,\r\n                      usd: \"200\",\r\n                      nftcontract: ULE_NFT_200,\r\n                      url: ImgeURL,\r\n                      // txn: hash,\r\n                    }\r\n                  );\r\n\r\n                  console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                  setinputdatahere(\" \");\r\n\r\n                  // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                  // let z = value * BusdPrice;\r\n\r\n                  // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                  //     from: acc\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n                  // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                  // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                  //     from: acc,\r\n                  // })\r\n                  // toast.success(\"Transaction Succefful\")\r\n                  // setButtonTwo(\"Mint With YULE\")\r\n                  // // console.log(\"hash\", hash.transactionHash);\r\n                  // hash = hash.transactionHash\r\n                  // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                  //     \"uid\": inputdatahere,\r\n                  //     \"address\": acc,\r\n                  //     \"nft\": value,\r\n                  //     \"token\": z,\r\n                  //     \"txn\": hash\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n\r\n                  // // console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n                  // setinputdatahere(\" \")\r\n                } else {\r\n                  toast.info(\"You're balance is Low\");\r\n                }\r\n              } else {\r\n                toast.error(\r\n                  \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                );\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_200_ABI, ULE_NFT_200);\r\n      //   let mintingBusdPrice = await nftContractOf.methods\r\n      //     .MinitngPricein_token()\r\n      //     .call();\r\n      let mintingBusdPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePric = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePric = web3.utils.fromWei(mintingWirePric)\r\n      // console.log(\"mintingWirePric\",mintingWirePric);\r\n      // mintingWirePrice = mintingWirePrice[1]\r\n      //   let mintingWirePrice = await axios.get(\r\n      //     \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      //   );\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n      );\r\n      console.log(\"YULE \", mintingWirePrice?.data?.data[0]?.usdperunit);\r\n      mintingWirePrice = mintingWirePrice?.data?.data[0]?.usdperunit;\r\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      //   let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n      let mintingbnbPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 200 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n              {imageArray.map((items, idex) => {\r\n                return (\r\n                  <div class=\"col-sm-6 col-lg-4\">\r\n                    <div class=\"single-live-auction home-2\">\r\n                      <div class=\" home-2\">\r\n                        <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\r\n                      </div>\r\n\r\n                      <div class=\"collection-text home-2 text-center\">\r\n                        <a href=\"#\">\r\n                          {/* YULE NFT ID:{items.token_id}, {items.num} USD */}\r\n                          YULE NFT ID: {items.num}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div class=\"row d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                <a\r\n                  class=\"btn close\"\r\n                  style={{ backgroundColor: \"rgb(251, 197, 11)\" }}\r\n                  onClick={() => handleClose()}\r\n                >\r\n                  Close\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_300,\r\n  ULE_NFT_300_ABI,\r\n  wireNftContractAbi,\r\n  ULE_NFT_100,\r\n  ULE_NFT_100_ABI,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport { getSignatureTest } from \"../../apis/signature\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_300() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n  let [imageArray, setImageArray] = useState([]);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n    let simplleArray = [];\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        //   let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        //   // console.log(\"resdatahere\", res.data.data);\r\n        //   res = res.data.data;\r\n        //   if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_300_ABI,\r\n            ULE_NFT_300\r\n          );\r\n          let uleContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods.maxBatchSize().call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n          let accountBalance = await web3.eth.getBalance(acc);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let maxSupply = await nftContractOf.methods.collectionSize().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .maxBatchSize()\r\n              .call();\r\n            //   let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            //   mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // console.log(\"mintingWirePrice\", mintingWirePrice);\r\n            //   mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingULEPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n            );\r\n\r\n            mintingULEPrice =\r\n              value * mintingULEPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingULEPrice = parseInt(mintingULEPrice).toFixed(0);\r\n            mintingULEPrice = web3.utils.toWei(mintingULEPrice);\r\n\r\n            let mintingBNBPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n            );\r\n\r\n            mintingBNBPrice =\r\n              value * mintingBNBPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingBNBPrice = web3.utils.toWei(\r\n              parseFloat(mintingBNBPrice).toString()\r\n            );\r\n            // let val = 0.00001;\r\n            // mintingBNBPrice = web3.utils.toWei(parseFloat(val).toString());\r\n            // console.log(\"totalMintingPriceWire\", mintingBNBPrice);\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (value < parseInt(maxLimitprTransaction)) {\r\n                if (parseFloat(accountBalance) > parseFloat(mintingBNBPrice)) {\r\n                  // console.log(\"Minting Value= \", value);\r\n                  // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                  await uleContractOf.methods\r\n                    .approve(ULE_NFT_300, mintingULEPrice)\r\n                    .send({\r\n                      from: acc,\r\n                    });\r\n\r\n                  toast.success(\"Approve Confirmed\");\r\n\r\n                  let signature = await getSignatureTest(\r\n                    ULE_NFT_300,\r\n                    acc,\r\n                    mintingULEPrice\r\n                  );\r\n                  let data_value = value;\r\n                  // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                  // console.log(\"value\", value);\r\n\r\n                  let hash = await nftContractOf.methods\r\n                    .Mint(\r\n                      data_value,\r\n                      mintingULEPrice,\r\n                      signature[0],\r\n                      signature[1]\r\n                    )\r\n                    .send({\r\n                      from: acc,\r\n                      value: mintingBNBPrice,\r\n                    });\r\n                  let walletOfOwner300 = await nftContractOf.methods\r\n                    .WalletOfOwner(acc)\r\n                    .call();\r\n                  let LastIndex_array = walletOfOwner300.slice(1).slice(-value);\r\n\r\n                  let walletLength300 = LastIndex_array.length;\r\n                  console.log(\"walletOfOwner\", walletLength300);\r\n\r\n                  for (let i = 0; i < walletLength300; i++) {\r\n                    let val = LastIndex_array[i];\r\n\r\n                    let url_num = 3460 + +val;\r\n\r\n                    try {\r\n                      let res = await axios.get(\r\n                        `https://usdulenft.mypinata.cloud/ipfs/QmVEzHWb59Zo9r9sUEY1CVwWoFQkYEk4VgHRYYT83Vq636/${url_num}.gif`\r\n                      );\r\n                      // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                      let imageUrl = res.config.url;\r\n                      setImgeURL(imageUrl);\r\n                      let dna = url_num;\r\n                      simplleArray = [\r\n                        ...simplleArray,\r\n                        { imageUrl: imageUrl, num: dna },\r\n                      ];\r\n                      setImageArray(simplleArray);\r\n                    } catch (e) {\r\n                      console.log(\"Error while Fetching Api\", e);\r\n                    }\r\n                  }\r\n                  setShowModal(true);\r\n                  toast.success(\"Transaction Confirmed\");\r\n\r\n                  // hash = hash.transactionHash;\r\n                  let postapi = await axios.post(\r\n                    \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                    {\r\n                      uid: \"101010\",\r\n                      address: acc,\r\n                      nft: value,\r\n                      token: mintingULEPrice,\r\n                      usd: \"300\",\r\n                      nftcontract: ULE_NFT_300,\r\n                      url: ImgeURL,\r\n                      // txn: hash,\r\n                    }\r\n                  );\r\n\r\n                  console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                  setinputdatahere(\" \");\r\n\r\n                  // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                  // let z = value * BusdPrice;\r\n\r\n                  // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                  //     from: acc\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n                  // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                  // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                  //     from: acc,\r\n                  // })\r\n                  // toast.success(\"Transaction Succefful\")\r\n                  // setButtonTwo(\"Mint With YULE\")\r\n                  // // console.log(\"hash\", hash.transactionHash);\r\n                  // hash = hash.transactionHash\r\n                  // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                  //     \"uid\": inputdatahere,\r\n                  //     \"address\": acc,\r\n                  //     \"nft\": value,\r\n                  //     \"token\": z,\r\n                  //     \"txn\": hash\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n\r\n                  // // console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n                  // setinputdatahere(\" \")\r\n                } else {\r\n                  toast.info(\"You're balance is Low\");\r\n                }\r\n              } else {\r\n                toast.error(\r\n                  \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                );\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        //   } else {\r\n        //       toast.error(\"User Is Not Exists\")\r\n        //       setinputdatahere(\" \")\r\n\r\n        //   }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_300_ABI, ULE_NFT_300);\r\n      //   let mintingBusdPrice = await nftContractOf.methods\r\n      //     .MinitngPricein_token()\r\n      //     .call();\r\n      let mintingBusdPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePric = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePric = web3.utils.fromWei(mintingWirePric)\r\n      // console.log(\"mintingWirePric\",mintingWirePric);\r\n      // mintingWirePrice = mintingWirePrice[1]\r\n      //   let mintingWirePrice = await axios.get(\r\n      //     \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      //   );\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n      );\r\n      console.log(\"YULE \", mintingWirePrice?.data?.data[0]?.usdperunit);\r\n      mintingWirePrice = mintingWirePrice?.data?.data[0]?.usdperunit;\r\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      //   let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n      let mintingbnbPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 300 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n              {imageArray.map((items, idex) => {\r\n                return (\r\n                  <div class=\"col-sm-6 col-lg-4\">\r\n                    <div class=\"single-live-auction home-2\">\r\n                      <div class=\" home-2\">\r\n                        <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\r\n                      </div>\r\n\r\n                      <div class=\"collection-text home-2 text-center\">\r\n                        <a href=\"#\">\r\n                          {/* YULE NFT ID:{items.token_id}, {items.num} USD */}\r\n                          YULE NFT ID: {items.num}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div class=\"row d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                <a\r\n                  class=\"btn close\"\r\n                  style={{ backgroundColor: \"rgb(251, 197, 11)\" }}\r\n                  onClick={() => handleClose()}\r\n                >\r\n                  Close\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_400,\r\n  ULE_NFT_400_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n  ULE_NFT_100,\r\n  ULE_NFT_100_ABI,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\nimport { getSignatureTest } from \"../../apis/signature\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_400() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  let [imageArray, setImageArray] = useState([]);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n    let simplleArray = [];\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        //   let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        //   // console.log(\"resdatahere\", res.data.data);\r\n        //   res = res.data.data;\r\n        //   if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_400_ABI,\r\n            ULE_NFT_400\r\n          );\r\n          let uleContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods.maxBatchSize().call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n          let accountBalance = await web3.eth.getBalance(acc);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            // let userBusdBalance = await wireContractOf.methods\r\n            //   .balanceOf(acc)\r\n            //   .call();\r\n            // console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.collectionSize().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .maxBatchSize()\r\n              .call();\r\n            //   let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            //   mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            //   mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingULEPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n            );\r\n\r\n            mintingULEPrice =\r\n              value * mintingULEPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingULEPrice = parseInt(mintingULEPrice).toFixed(0);\r\n            mintingULEPrice = web3.utils.toWei(mintingULEPrice);\r\n\r\n            let mintingBNBPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n            );\r\n\r\n            mintingBNBPrice =\r\n              value * mintingBNBPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingBNBPrice = web3.utils.toWei(\r\n              parseFloat(mintingBNBPrice).toString()\r\n            );\r\n            // let val = 0.00001;\r\n            // mintingBNBPrice = web3.utils.toWei(parseFloat(val).toString());\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (value < parseInt(maxLimitprTransaction)) {\r\n                if (parseFloat(accountBalance) > parseFloat(mintingBNBPrice)) {\r\n                  // console.log(\"Minting Value= \", value);\r\n                  // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                  await uleContractOf.methods\r\n                    .approve(ULE_NFT_400, mintingULEPrice)\r\n                    .send({\r\n                      from: acc,\r\n                    });\r\n\r\n                  toast.success(\"Approve Confirmed\");\r\n\r\n                  let signature = await getSignatureTest(\r\n                    ULE_NFT_400,\r\n                    acc,\r\n                    mintingULEPrice\r\n                  );\r\n\r\n                  // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                  // console.log(\"value\", value);\r\n                  let data_value = value;\r\n\r\n                  let hash = await nftContractOf.methods\r\n                    .Mint(\r\n                      data_value,\r\n                      mintingULEPrice,\r\n                      signature[0],\r\n                      signature[1]\r\n                    )\r\n                    .send({\r\n                      from: acc,\r\n                      value: mintingBNBPrice,\r\n                    });\r\n                  let walletOfOwner400 = await nftContractOf.methods\r\n                    .WalletOfOwner(acc)\r\n                    .call();\r\n                  // let Price400 = await wireContractOf.methods\r\n                  //   .MinitngPricein_token()\r\n                  //   .call();\r\n                  let LastIndex_array = walletOfOwner400.slice(1).slice(-value);\r\n                  let walletLength400 = LastIndex_array.length;\r\n                  console.log(\"walletOfOwner\", walletLength400);\r\n\r\n                  for (let i = 0; i < walletLength400; i++) {\r\n                    let val = LastIndex_array[i];\r\n\r\n                    let url_num = 4130 + +val;\r\n\r\n                    try {\r\n                      let res = await axios.get(\r\n                        `https://usdulenft.mypinata.cloud/ipfs/QmVjhfnbMkBgsw1ijXGr6FFohhD55Nm7SZupTdkWEzzGQX/${url_num}.gif`\r\n                      );\r\n                      // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                      let imageUrl = res.config.url;\r\n                      console.log(\"check\", res);\r\n                      let dna = url_num;\r\n                      simplleArray = [\r\n                        ...simplleArray,\r\n                        { imageUrl: imageUrl, num: dna },\r\n                      ];\r\n                      setImageArray(simplleArray);\r\n                    } catch (e) {\r\n                      console.log(\"Error while Fetching Api\", e);\r\n                    }\r\n                  }\r\n                  setShowModal(true);\r\n\r\n                  toast.success(\"Transaction Confirmed\");\r\n\r\n                  // hash = hash.transactionHash;\r\n                  let postapi = await axios.post(\r\n                    \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                    {\r\n                      uid: \"101010\",\r\n                      address: acc,\r\n                      nft: value,\r\n                      token: mintingULEPrice,\r\n                      usd: \"400\",\r\n                      nftcontract: ULE_NFT_400,\r\n                      url: ImgeURL,\r\n                      // txn: hash,\r\n                    }\r\n                  );\r\n\r\n                  console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                  setinputdatahere(\" \");\r\n\r\n                  // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                  // let z = value * BusdPrice;\r\n\r\n                  // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                  //     from: acc\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n                  // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                  // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                  //     from: acc,\r\n                  // })\r\n                  // toast.success(\"Transaction Succefful\")\r\n                  // setButtonTwo(\"Mint With YULE\")\r\n                  // // console.log(\"hash\", hash.transactionHash);\r\n                  // hash = hash.transactionHash\r\n                  // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                  //     \"uid\": inputdatahere,\r\n                  //     \"address\": acc,\r\n                  //     \"nft\": value,\r\n                  //     \"token\": z,\r\n                  //     \"txn\": hash\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n\r\n                  // // console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n                  // setinputdatahere(\" \")\r\n                } else {\r\n                  toast.info(\"You're balance is Low\");\r\n                }\r\n              } else {\r\n                toast.error(\r\n                  \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                );\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        //   } else {\r\n        //       toast.error(\"User Is Not Exists\")\r\n        //       setinputdatahere(\" \")\r\n\r\n        //   }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_400_ABI, ULE_NFT_400);\r\n      //   let mintingBusdPrice = await nftContractOf.methods\r\n      //     .MinitngPricein_token()\r\n      //     .call();\r\n      let mintingBusdPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePric = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePric = web3.utils.fromWei(mintingWirePric)\r\n      // console.log(\"mintingWirePric\",mintingWirePric);\r\n      // mintingWirePrice = mintingWirePrice[1]\r\n      //   let mintingWirePrice = await axios.get(\r\n      //     \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      //   );\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n      );\r\n      console.log(\"YULE \", mintingWirePrice?.data?.data[0]?.usdperunit);\r\n      mintingWirePrice = mintingWirePrice?.data?.data[0]?.usdperunit;\r\n      mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      //   let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n      let mintingbnbPrice = await axios.get(\r\n        \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n      );\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 400 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n              {imageArray.map((items, idex) => {\r\n                return (\r\n                  <div class=\"col-sm-6 col-lg-4\">\r\n                    <div class=\"single-live-auction home-2\">\r\n                      <div class=\" home-2\">\r\n                        <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\r\n                      </div>\r\n\r\n                      <div class=\"collection-text home-2 text-center\">\r\n                        <a href=\"#\">\r\n                          {/* YULE NFT ID:{items.token_id}, {items.num} USD */}\r\n                          YULE NFT ID: {items.num}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div class=\"row d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                <a\r\n                  class=\"btn close\"\r\n                  style={{ backgroundColor: \"rgb(251, 197, 11)\" }}\r\n                  onClick={() => handleClose()}\r\n                >\r\n                  Close\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_500,\r\n  ULE_NFT_500_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n  ULE_NFT_100,\r\n  ULE_NFT_100_ABI,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { getSignatureTest } from \"../../apis/signature\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_500() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n  let [imageArray, setImageArray] = useState([]);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n    let simplleArray = [];\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        // // console.log(\"resdatahere\", res.data.data);\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_500_ABI,\r\n            ULE_NFT_500\r\n          );\r\n          let uleContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods.maxBatchSize().call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n          let accountBalance = await web3.eth.getBalance(acc);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let maxSupply = await nftContractOf.methods.collectionSize().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .maxBatchSize()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingULEPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_Ule_bnb\"\r\n            );\r\n\r\n            mintingULEPrice =\r\n              value * mintingULEPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingULEPrice = parseInt(mintingULEPrice).toFixed(0);\r\n            mintingULEPrice = web3.utils.toWei(mintingULEPrice);\r\n\r\n            let mintingBNBPrice = await axios.get(\r\n              \"https://ulematic-api.herokuapp.com/live_rate_bnb\"\r\n            );\r\n\r\n            mintingBNBPrice =\r\n              value * mintingBNBPrice?.data?.data[0]?.usdperunit * 300;\r\n\r\n            mintingBNBPrice = web3.utils.toWei(\r\n              parseFloat(mintingBNBPrice).toString()\r\n            );\r\n            let val = 0.00001;\r\n            mintingBNBPrice = web3.utils.toWei(parseFloat(val).toString());\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (value < parseInt(maxLimitprTransaction)) {\r\n                if (parseFloat(accountBalance) > parseFloat(mintingBNBPrice)) {\r\n                  // console.log(\"Minting Value= \", value);\r\n                  // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                  await uleContractOf.methods\r\n                    .approve(ULE_NFT_500, mintingULEPrice)\r\n                    .send({\r\n                      from: acc,\r\n                    });\r\n\r\n                  toast.success(\"Approve Confirmed\");\r\n\r\n                  let signature = await getSignatureTest(\r\n                    ULE_NFT_500,\r\n                    acc,\r\n                    mintingULEPrice\r\n                  );\r\n                  // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                  // console.log(\"value\", value);\r\n                  let data_value = value;\r\n\r\n                  let hash = await nftContractOf.methods\r\n                    .Mint(\r\n                      data_value,\r\n                      mintingULEPrice,\r\n                      signature[0],\r\n                      signature[1]\r\n                    )\r\n                    .send({\r\n                      from: acc,\r\n                      value: mintingBNBPrice,\r\n                    });\r\n                  let walletOfOwner500 = await nftContractOf.methods\r\n                    .WalletOfOwner(acc)\r\n                    .call();\r\n                  // let Price500 = await nftContractOf.methods\r\n                  //   .MinitngPricein_token()\r\n                  //   .call();\r\n                  let LastIndex_array = walletOfOwner500.slice(1).slice(-value);\r\n                  let walletLength500 = LastIndex_array.length;\r\n                  console.log(\"walletOfOwner\", walletLength500);\r\n\r\n                  for (let i = 0; i < walletLength500; i++) {\r\n                    let val = LastIndex_array[i];\r\n\r\n                    let url_num = 4800 + +val;\r\n\r\n                    try {\r\n                      let res = await axios.get(\r\n                        `https://usdulenft.mypinata.cloud/ipfs/QmYhnW22KPbckGWaePUASowNHKrck3Xk2XcVRbYM78ktTU/${url_num}.gif`\r\n                      );\r\n                      // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                      let imageUrl = res.config.url;\r\n                      setImgeURL(imageUrl);\r\n                      console.log(\"check\", res);\r\n                      let dna = url_num;\r\n                      simplleArray = [\r\n                        ...simplleArray,\r\n                        { imageUrl: imageUrl, num: dna },\r\n                      ];\r\n                      setImageArray(simplleArray);\r\n                    } catch (e) {\r\n                      console.log(\"Error while Fetching Api\", e);\r\n                    }\r\n                  }\r\n                  setShowModal(true);\r\n\r\n                  toast.success(\"Transaction Confirmed\");\r\n\r\n                  // hash = hash.transactionHash;\r\n                  let postapi = await axios.post(\r\n                    \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                    {\r\n                      uid: \"101010\",\r\n                      address: acc,\r\n                      nft: value,\r\n                      token: mintingULEPrice,\r\n                      usd: \"500\",\r\n                      nftcontract: ULE_NFT_500,\r\n                      url: ImgeURL,\r\n                      // txn: hash,\r\n                    }\r\n                  );\r\n\r\n                  console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                  setinputdatahere(\" \");\r\n\r\n                  // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                  // let z = value * BusdPrice;\r\n\r\n                  // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                  //     from: acc\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n                  // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                  // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                  //     from: acc,\r\n                  // })\r\n                  // toast.success(\"Transaction Succefful\")\r\n                  // setButtonTwo(\"Mint With YULE\")\r\n                  // // console.log(\"hash\", hash.transactionHash);\r\n                  // hash = hash.transactionHash\r\n                  // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                  //     \"uid\": inputdatahere,\r\n                  //     \"address\": acc,\r\n                  //     \"nft\": value,\r\n                  //     \"token\": z,\r\n                  //     \"txn\": hash\r\n                  // })\r\n                  // toast.success(\"Transaction Confirmed\")\r\n\r\n                  // // console.log(\"postapi\", postapi);\r\n                  // toast.success(\"Success\", postapi.data.data)\r\n                  // setinputdatahere(\" \")\r\n                } else {\r\n                  toast.info(\"You're balance is Low\");\r\n                }\r\n              } else {\r\n                toast.error(\r\n                  \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                );\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_500_ABI, ULE_NFT_500);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 5).toFixed(1);\r\n      console.log(\"500\", mintingWirePrice);\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 500 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={showModal}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body className=\"model_bg\">\r\n          <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n              {imageArray.map((items, idex) => {\r\n                return (\r\n                  <div class=\"col-sm-6 col-lg-4\">\r\n                    <div class=\"single-live-auction home-2\">\r\n                      <div class=\" home-2\">\r\n                        <img src={items.imageUrl} alt=\"Image\" width=\"100%\" />\r\n                      </div>\r\n\r\n                      <div class=\"collection-text home-2 text-center\">\r\n                        <a href=\"#\">\r\n                          {/* YULE NFT ID:{items.token_id}, {items.num} USD */}\r\n                          YULE NFT ID: {items.num}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div class=\"row d-flex justify-content-center align-items-center\">\r\n              <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                <a\r\n                  class=\"btn close\"\r\n                  style={{ backgroundColor: \"rgb(251, 197, 11)\" }}\r\n                  onClick={() => handleClose()}\r\n                >\r\n                  Close\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_1000,\r\n  ULE_NFT_1000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_1000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        // // console.log(\"resdatahere\", res.data.data);\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_1000_ABI,\r\n            ULE_NFT_1000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 10);\r\n            console.log(\"1000\", mintingWirePrice);\r\n\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_1000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner1000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let Price1000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n\r\n                    let LastIndex_array = walletOfOwner1000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let walletLength1000 = LastIndex_array.length;\r\n\r\n                    console.log(\"walletOfOwner\", walletLength1000);\r\n\r\n                    for (let i = 0; i < walletLength1000; i++) {\r\n                      let val = LastIndex_array[i];\r\n\r\n                      let url_num = 5540 + +val;\r\n\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmRpDTwYkr81eix3MJQuAYqMksXhdRFDutjzYok3Z7JHge/p1/${url_num}.gif`\r\n                        );\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        setImgeURL(imageUrl);\r\n                        console.log(\"check\", res);\r\n                        let dna = Price1000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_1000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_1000_ABI, ULE_NFT_1000);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 10).toFixed(1);\r\n      console.log(\"200\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 1000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_2000,\r\n  ULE_NFT_2000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_2000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        // // console.log(\"resdatahere\", res.data.data);\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_2000_ABI,\r\n            ULE_NFT_2000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 20);\r\n            console.log(\"2000\", mintingWirePrice);\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_2000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner2000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let Price2000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n                    let LastIndex_array = walletOfOwner2000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let walletLength2000 = LastIndex_array.length;\r\n                    console.log(\"walletOfOwner\", walletLength2000);\r\n\r\n                    for (let i = 0; i < walletLength2000; i++) {\r\n                      let val = LastIndex_array[i];\r\n\r\n                      let url_num = 5840 + +val;\r\n\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmPDQfrrLFiNwHPrE4f2oZP3Zspg4ZMk6jAu9spTNdmk4p/${url_num}.gif`\r\n                        );\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        console.log(\"check\", res);\r\n                        let dna = Price2000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_2000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_2000_ABI, ULE_NFT_2000);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 20).toFixed(1);\r\n      console.log(\"2000\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 2000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_3000,\r\n  ULE_NFT_3000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_3000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        // // console.log(\"resdatahere\", res.data.data);\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_3000_ABI,\r\n            ULE_NFT_3000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 30);\r\n            console.log(\"3000\", mintingWirePrice);\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_3000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner3000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let Price3000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n                    let LastIndex_array = walletOfOwner3000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let walletLength3000 = LastIndex_array.length;\r\n                    console.log(\"walletOfOwner\", walletLength3000);\r\n\r\n                    for (let i = 0; i < walletLength3000; i++) {\r\n                      let val = LastIndex_array[i];\r\n                      let url_num = 6140 + +val;\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmaFcyFxBQuo7qxvzN3PYm9W6oHeJypbiC9FuYhf6XeSEG/${url_num}.gif`\r\n                        );\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        setImgeURL(imageUrl);\r\n                        console.log(\"check\", res);\r\n                        let dna = Price3000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_3000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_3000_ABI, ULE_NFT_3000);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 30).toFixed(1);\r\n      console.log(\"3000\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 3000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_4000,\r\n  ULE_NFT_4000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_4000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        //   let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        //   // console.log(\"resdatahere\", res.data.data);\r\n        //   res = res.data.data;\r\n        //   if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_4000_ABI,\r\n            ULE_NFT_4000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            //   let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            //   mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            //   mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 40);\r\n            console.log(\"4000\", mintingWirePrice);\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_4000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner4000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let Price4000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n                    let LastIndex_array = walletOfOwner4000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let walletLength4000 = LastIndex_array.length;\r\n                    console.log(\"walletOfOwner4000\", walletOfOwner4000);\r\n\r\n                    for (let i = 0; i < walletLength4000; i++) {\r\n                      let val = LastIndex_array[i];\r\n                      let startValue = 6440;\r\n                      console.log(\"Val400\", val);\r\n                      let url_num = 6440 + +val;\r\n                      console.log(\"Val400\", url_num);\r\n\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmeBnPEeQTaGgvKLYq7Ej51Kq5Kh2dNjan5fTg1eNkWBjZ/${url_num}.gif`\r\n                        );\r\n                        console.log(\"Check44\");\r\n                        console.log(\"check\", res);\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        setImgeURL(imageUrl);\r\n                        let dna = Price4000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_4000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    toast.success(\"Success\", postapi.data.data);\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        //   } else {\r\n        //       toast.error(\"User Is Not Exists\")\r\n        //       setinputdatahere(\" \")\r\n\r\n        //   }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_4000_ABI, ULE_NFT_4000);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 40).toFixed(1);\r\n      console.log(\"4000\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 4000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_5000,\r\n  ULE_NFT_5000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_5000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        //   let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        //   // console.log(\"resdatahere\", res.data.data);\r\n        //   res = res.data.data;\r\n        //   if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_5000_ABI,\r\n            ULE_NFT_5000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            //   let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            //   mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            //   mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 50);\r\n            console.log(\"5000\", mintingWirePrice);\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_5000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner5000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let Price5000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n                    let LastIndex_array = walletOfOwner5000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let walletLength5000 = LastIndex_array.length;\r\n                    console.log(\"walletOfOwner5000\", walletLength5000);\r\n\r\n                    for (let i = 0; i < walletLength5000; i++) {\r\n                      let val = LastIndex_array[i];\r\n                      let url_num = 6740 + +val;\r\n                      console.log(\"url_num500\", url_num);\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmcSECUxFXFpxVUzWP63qPyonfRt8qW5UaJHa8GDL9yZnV/${url_num}.gif`\r\n                        );\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        setImgeURL(imageUrl);\r\n                        console.log(\"check\", res);\r\n                        let dna = Price5000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_5000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        //   } else {\r\n        //       toast.error(\"User Is Not Exists\")\r\n        //       setinputdatahere(\" \")\r\n\r\n        //   }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(ULE_NFT_5000_ABI, ULE_NFT_5000);\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 50).toFixed(1);\r\n      console.log(\"5000\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 5000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { HiChevronDoubleRight } from \"react-icons/hi\";\r\nimport { HiChevronDoubleLeft } from \"react-icons/hi\";\r\nimport { loadWeb3 } from \"../../apis/api\";\r\n\r\nimport {\r\n  ULE_NFT_10000,\r\n  ULE_NFT_10000_ABI,\r\n  wireNftContractAbi,\r\n  wireNftContractAddress,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport {\r\n  busdNftTokenAddress,\r\n  busdNftTokenAbi,\r\n} from \"../../utilies/Bsc_contract\";\r\nimport { wireTokenAddress, wireTokenAbi } from \"../../utilies/Bsc_contract\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Mint_With_10000() {\r\n  let [btnTxt, setBtTxt] = useState(\"Connect\");\r\n\r\n  let NetId;\r\n  const getAccount = async () => {\r\n    const web3 = window.web3;\r\n\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await window.web3.eth.getChainId((err, netId) => {\r\n      console.log(\"netid\", netId);\r\n      NetId = netId;\r\n    });\r\n\r\n    if (NetId == 56) {\r\n      let acc = await loadWeb3();\r\n    } else {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet\");\r\n    }\r\n\r\n    await window.ethereum.enable();\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      setBtTxt(\"No Wallet\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      setBtTxt(\"Wrong Network\");\r\n    } else {\r\n      let myAcc =\r\n        acc?.substring(0, 4) + \"...\" + acc?.substring(acc?.length - 4);\r\n      setBtTxt(myAcc);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {}, 1000);\r\n    getAccount();\r\n  }, []);\r\n\r\n  let [value, setValue] = useState(1);\r\n  let [point, setPoint] = useState(0);\r\n  let [mintPriceBnb, setMintPriceBnb] = useState(0);\r\n  let [mintPriceBUSD, setMintPriceBUSD] = useState(0);\r\n  let [mintPriceWire, setmintPriceWire] = useState(0);\r\n  let [btnOne, setButtonOne] = useState(\"Mint With BNB\");\r\n  let [btnTwo, setButtonTwo] = useState(\"Mint With YULE\");\r\n  let [btnThree, setButtonThree] = useState(\"Mint With Busd\");\r\n  const [inputdatahere, setinputdatahere] = useState(\"100\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModal2, setShowModal2] = useState(false);\r\n\r\n  const [showModal3, setShowModal3] = useState(false);\r\n\r\n  const [subMitFunction, setsubMitFunction] = useState();\r\n  const [ImgeURL, setImgeURL] = useState();\r\n\r\n  const increaseValue = () => {\r\n    if (value < 5) {\r\n      setValue(++value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const decreaseValue = () => {\r\n    if (value > 1) {\r\n      setValue(--value);\r\n      console.log(\"setValue\", value);\r\n    }\r\n  };\r\n\r\n  const myMintBNB = async () => {\r\n    // console.log(\"res\",inputValue)\r\n    setShowModal(false);\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        console.log(\"value_change\", value);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data);\r\n        res = res.data.data;\r\n\r\n        if (res == 1) {\r\n          try {\r\n            setButtonOne(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BNB\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingbnbPrice = await nftContractOf.methods\r\n                .Valueinbnb()\r\n                .call();\r\n\r\n              // console.log(\"jjjjj\", mintingbnbPrice);\r\n              // mintingbnbPrice = mintingbnbPrice[0]\r\n              // mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n              mintingbnbPrice = parseFloat(mintingbnbPrice);\r\n              // console.log(\"finalwhe\", mintingbnbPrice);\r\n\r\n              // setMintPriceBnb(mintingbnbPrice)\r\n              let totalMintingPriceBNB = value * mintingbnbPrice;\r\n              let getdata = await axios.get(\r\n                \"https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT\"\r\n              );\r\n              // console.log(\"data_chack_here\", getdata.data.price);\r\n              getdata = getdata.data.price;\r\n              // console.log(\"Minting_totalMintingPriceBNB= \", totalMintingPriceBNB);\r\n              let usid = totalMintingPriceBNB * getdata;\r\n              // console.log(\"usid\", usid);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    // console.log(\"Minting Value= \", value);\r\n\r\n                    // let usid=\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMintingPricein_MATIC().call();\r\n                    // BusdPrice = BusdPrice * value;\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_BNB(value)\r\n                      .send({\r\n                        from: acc,\r\n                        value: totalMintingPriceBNB.toString(),\r\n                      });\r\n                    toast.success(\"Transaction Confirmed\");\r\n                    setButtonOne(\"Mint With BNB\");\r\n                    // console.log(\"hash\", hash.transactionHash);\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: inputdatahere,\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: mintingbnbPrice,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    // console.log(\"postapi\", postapi);\r\n                    // toast.success(postapi.data.data)\r\n                    setinputdatahere(\" \");\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonOne(\"Mint With BNB\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonOne(\"Mint With BNB\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonOne(\"Mint With BNB\");\r\n              }\r\n              // }\r\n              // else {\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_MATIC(value).send({\r\n              //         from: acc,\r\n              //         value: totalMintingPriceBNB.toString()\r\n              //     })\r\n              //     // console.log(\"hash\", hash.transactionHash);\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": mintingbnbPrice,\r\n              //         \"txn\": hash\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(postapi.data.data)\r\n              //     setinputdatahere(\" \")\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     // toast.error(\" Please White Listed Address\")\r\n              //     setButtonOne(\"Mint With BNB\")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting BNB \", e);\r\n            toast.error(\"Transaction failed\");\r\n            setButtonOne(\"Mint With BNB\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n          setButtonOne(\"Mint With BNB\");\r\n        }\r\n      } catch (e) {\r\n        setinputdatahere(\" \");\r\n        toast.error(\"User Is Not Exists\");\r\n        setButtonOne(\"Mint With BNB\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const myMintWire = async () => {\r\n    setShowModal2(false);\r\n\r\n    let acc = await loadWeb3();\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        // let res = await axios.get(`https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`)\r\n        // // console.log(\"resdatahere\", res.data.data);\r\n        // res = res.data.data;\r\n        // if (res == 1) {\r\n        try {\r\n          setButtonTwo(\"Please Wait While Processing\");\r\n          // console.log(\"mintFor Wire\");\r\n          const web3 = window.web3;\r\n          let nftContractOf = new web3.eth.Contract(\r\n            ULE_NFT_10000_ABI,\r\n            ULE_NFT_10000\r\n          );\r\n          let wireContractOf = new web3.eth.Contract(\r\n            wireTokenAbi,\r\n            wireTokenAddress\r\n          );\r\n          let totalnft = await nftContractOf.methods\r\n            .MaxLimitPerTransaction()\r\n            .call();\r\n\r\n          // console.log(\"totalnft\", totalnft);\r\n\r\n          if (value > totalnft) {\r\n            toast.error(`Maximum Limit is ${totalnft} `);\r\n          } else {\r\n            let userBusdBalance = await wireContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            // userBusdBalance = web3.utils.fromWei(userBusdBalance)\r\n            let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n            let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n            let paused = await nftContractOf.methods.paused().call();\r\n            let maxLimitprTransaction = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n            // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n            // mintingWirePrice = web3.utils.fromWei(mintingWirePrice);\r\n            // console.log(\"mintingWirePrice\", mintingWirePrice);\r\n            // mintingWirePrice = parseFloat(mintingWirePrice);\r\n            let mintingWirePrice = await axios.get(\r\n              \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n            );\r\n            mintingWirePrice = parseFloat(mintingWirePrice.data.data * 100);\r\n            console.log(\"10000\", mintingWirePrice);\r\n            let totalMintingPriceWire = value * mintingWirePrice + 0.01;\r\n            totalMintingPriceWire = web3.utils.toWei(\r\n              totalMintingPriceWire.toString()\r\n            );\r\n            // console.log(\"totalMintingPriceWire\",totalMintingPriceWire);\r\n\r\n            // if (llisted_check == 'true') {\r\n\r\n            if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n              if (paused == false) {\r\n                if (value < parseInt(maxLimitprTransaction)) {\r\n                  if (parseFloat(userBusdBalance) >= totalMintingPriceWire) {\r\n                    // console.log(\"Minting Value= \", value);\r\n                    // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceWire);\r\n\r\n                    await wireContractOf.methods\r\n                      .approve(ULE_NFT_10000, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n                    toast.success(\"Approve Confirmed\");\r\n\r\n                    // console.log(\"totalMintingPriceWire\", totalMintingPriceWire);\r\n                    // console.log(\"value\", value);\r\n                    let data_value = value;\r\n\r\n                    let hash = await nftContractOf.methods\r\n                      .mint_with_token(data_value, totalMintingPriceWire)\r\n                      .send({\r\n                        from: acc,\r\n                      });\r\n\r\n                    let walletOfOwner10000 = await nftContractOf.methods\r\n                      .walletOfOwner(acc)\r\n                      .call();\r\n                    let LastIndex_array = walletOfOwner10000\r\n                      .slice(1)\r\n                      .slice(-value);\r\n\r\n                    let Price10000 = await nftContractOf.methods\r\n                      .MinitngPricein_token()\r\n                      .call();\r\n                    let walletLength10000 = LastIndex_array.length;\r\n                    console.log(\"walletOfOwner\", walletLength10000);\r\n\r\n                    for (let i = 0; i < walletLength10000; i++) {\r\n                      let val = LastIndex_array[i];\r\n                      let url_num = 7040 + +val;\r\n                      try {\r\n                        let res = await axios.get(\r\n                          `https://usdulenft.mypinata.cloud/ipfs/QmeSFY6S6DzrhW7UPX9hfy6AvnwTahFQT15wCtWp7d25Mr/${url_num}.gif`\r\n                        );\r\n                        // let res = await axios.get(`/config/${walletOfOwner[i]}.json`)\r\n                        let imageUrl = res.config.url;\r\n                        setImgeURL(imageUrl);\r\n                        console.log(\"check\", res);\r\n                        let dna = Price10000;\r\n                      } catch (e) {\r\n                        console.log(\"Error while Fetching Api\", e);\r\n                      }\r\n                    }\r\n                    toast.success(\"Transaction Confirmed\");\r\n\r\n                    hash = hash.transactionHash;\r\n                    let postapi = await axios.post(\r\n                      \"https://ule-nft-api-1.herokuapp.com/buynfttoken\",\r\n                      {\r\n                        uid: \"101010\",\r\n                        address: acc,\r\n                        nft: value,\r\n                        token: totalMintingPriceWire,\r\n                        usd: \"1000\",\r\n                        nftcontract: ULE_NFT_10000,\r\n                        url: ImgeURL,\r\n                        txn: hash,\r\n                      }\r\n                    );\r\n\r\n                    console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                    setinputdatahere(\" \");\r\n\r\n                    // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_MMX().call();\r\n                    // let z = value * BusdPrice;\r\n\r\n                    // await wireContractOf.methods.approve(wireNftContractAddress, z).send({\r\n                    //     from: acc\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n                    // setButtonTwo(\"Please Wait for Second Confirmation\")\r\n                    // let hash = await nftContractOf.methods.mint_with_MMX(value, z.toString()).send({\r\n                    //     from: acc,\r\n                    // })\r\n                    // toast.success(\"Transaction Succefful\")\r\n                    // setButtonTwo(\"Mint With YULE\")\r\n                    // // console.log(\"hash\", hash.transactionHash);\r\n                    // hash = hash.transactionHash\r\n                    // let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n                    //     \"uid\": inputdatahere,\r\n                    //     \"address\": acc,\r\n                    //     \"nft\": value,\r\n                    //     \"token\": z,\r\n                    //     \"txn\": hash\r\n                    // })\r\n                    // toast.success(\"Transaction Confirmed\")\r\n\r\n                    // // console.log(\"postapi\", postapi);\r\n                    // toast.success(\"Success\", postapi.data.data)\r\n                    // setinputdatahere(\" \")\r\n                  } else {\r\n                    toast.error(\"Out Of Balance\");\r\n                    setButtonTwo(\"Mint With YULE\");\r\n                  }\r\n                } else {\r\n                  toast.error(\r\n                    \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                  );\r\n                  setButtonTwo(\"Mint With YULE\");\r\n                }\r\n              } else {\r\n                toast.error(\"Paused is False\");\r\n                setButtonTwo(\"Mint With YULE\");\r\n              }\r\n            } else {\r\n              toast.error(\"Max Supply is Greater than total Supply\");\r\n              setButtonTwo(\"Mint With YULE\");\r\n            }\r\n\r\n            // }\r\n            // else {\r\n\r\n            // }\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Error while minting \", e);\r\n          toast.error(\"Transaction failed\");\r\n          setButtonTwo(\"Mint With YULE\");\r\n        }\r\n        // } else {\r\n        //     toast.error(\"User Is Not Exists\")\r\n        //     setinputdatahere(\" \")\r\n\r\n        // }\r\n      } catch (e) {\r\n        console.log(\"Transaction failed\", e);\r\n        toast.error(\"Transaction failed\");\r\n        setinputdatahere(\" \");\r\n      }\r\n    }\r\n  };\r\n  const myMintBUSD = async () => {\r\n    let acc = await loadWeb3();\r\n    setShowModal3(false);\r\n\r\n    // console.log(\"ACC=\",acc)\r\n    if (acc == \"No Wallet\") {\r\n      toast.error(\"No Wallet Connected\");\r\n    } else if (acc == \"Wrong Network\") {\r\n      toast.error(\"Wrong Newtwork please connect to BSC MainNet \");\r\n    } else {\r\n      try {\r\n        // console.log(\"inputdatahere\", inputdatahere);\r\n\r\n        let res = await axios.get(\r\n          `https://whenftapi.herokuapp.com/checkuser?id=${inputdatahere}`\r\n        );\r\n        // console.log(\"resdatahere\", res.data.data);\r\n        res = res.data.data;\r\n        if (res == 1) {\r\n          try {\r\n            setButtonThree(\"Please Wait While Processing\");\r\n            // console.log(\"mintFor BUSD\");\r\n            const web3 = window.web3;\r\n            let nftContractOf = new web3.eth.Contract(\r\n              wireNftContractAbi,\r\n              wireNftContractAddress\r\n            );\r\n            let busdContractOf = new web3.eth.Contract(\r\n              busdNftTokenAbi,\r\n              busdNftTokenAddress\r\n            );\r\n            let userBusdBalance = await busdContractOf.methods\r\n              .balanceOf(acc)\r\n              .call();\r\n\r\n            userBusdBalance = web3.utils.fromWei(userBusdBalance);\r\n            console.log(\"userBusdBalance\", userBusdBalance);\r\n            let totalnft = await nftContractOf.methods\r\n              .MaxLimitPerTransaction()\r\n              .call();\r\n\r\n            // console.log(\"totalnft\", totalnft);\r\n            if (value > totalnft) {\r\n              toast.error(`Maximum Limit is ${totalnft} `);\r\n            } else {\r\n              let maxSupply = await nftContractOf.methods.maxsupply().call();\r\n              let ttlSupply = await nftContractOf.methods.totalSupply().call();\r\n              let paused = await nftContractOf.methods.paused().call();\r\n              let maxLimitprTransaction = await nftContractOf.methods\r\n                .MaxLimitPerTransaction()\r\n                .call();\r\n              let mintingBusdPrice = await nftContractOf.methods\r\n                .MinitngPricein_token()\r\n                .call();\r\n\r\n              // mintingBusdPrice = web3.utils.toWei(mintingBusdPrice);\r\n              mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n              // setMintPriceBUSD(mintingBusdPrice)\r\n              let totalMintingPriceBusd = value * mintingBusdPrice + 0.01;\r\n              // totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n\r\n              console.log(\"totalMintingPriceBusd\", totalMintingPriceBusd);\r\n              // console.log(\"ttlSupply\", maxLimitprTransaction);\r\n\r\n              // console.log(\"mintingBusdPrice\", mintingBusdPrice);\r\n\r\n              let llisted_check = await nftContractOf.methods\r\n                .iswhitelist(acc)\r\n                .call();\r\n              // console.log(\"iswhitelist\", llisted_check);\r\n\r\n              // if (llisted_check == 'true') {\r\n\r\n              if (parseInt(ttlSupply) < parseInt(maxSupply)) {\r\n                if (paused == false) {\r\n                  if (value < parseInt(maxLimitprTransaction)) {\r\n                    if (parseFloat(userBusdBalance) >= totalMintingPriceBusd) {\r\n                      // console.log(\"Minting Value= \", value);\r\n                      // console.log(\"Minting totalMintingPriceWire= \", totalMintingPriceBusd);\r\n                      // let BusdPrice = await nftContractOf.methods.WhitelistMinitngPricein_BUSD().call();\r\n\r\n                      // BusdPrice = parseFloat(BusdPrice)\r\n                      // let b = BusdPrice * value;\r\n\r\n                      totalMintingPriceBusd = web3.utils.toWei(\r\n                        totalMintingPriceBusd.toString()\r\n                      );\r\n                      //  let ContractOfBUSD = new web3.eth.Contract(busdNftTokenAbi, cancelAnimationFrame);\r\n\r\n                      await busdContractOf.methods\r\n                        .approve(wireNftContractAddress, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      setButtonThree(\"Please Wait For Second Confirmation\");\r\n                      toast.success(\"Transaction Confirmed\");\r\n                      let hash = await nftContractOf.methods\r\n                        .mint_with_BUSD(value, totalMintingPriceBusd)\r\n                        .send({\r\n                          from: acc,\r\n                        });\r\n                      toast.success(\"Transaction Confirmed\");\r\n\r\n                      hash = hash.transactionHash;\r\n                      let postapi = await axios.post(\r\n                        \"https://whenftapi.herokuapp.com/buynfttoken\",\r\n                        {\r\n                          uid: inputdatahere,\r\n                          address: acc,\r\n                          nft: value,\r\n                          token: totalMintingPriceBusd,\r\n                          txn: \"vgd54\",\r\n                        }\r\n                      );\r\n\r\n                      setButtonThree(\"Mint With Busd\");\r\n                      toast.success(\"Transaction Succefful\");\r\n                      // console.log(\"postapi\", postapi);\r\n                      toast.success(\"Success\", postapi.data.data);\r\n                      setinputdatahere(\" \");\r\n                    } else {\r\n                      toast.error(\"Out Of Balance\");\r\n                      setButtonThree(\"Mint With Busd\");\r\n                    }\r\n                  } else {\r\n                    toast.error(\r\n                      \"No of Minting is Greater than maximum limit Per Transaction\"\r\n                    );\r\n                    setButtonThree(\"Mint With Busd\");\r\n                  }\r\n                } else {\r\n                  toast.error(\"Paused is False\");\r\n                  setButtonThree(\"Mint With Busd\");\r\n                }\r\n              } else {\r\n                toast.error(\"Max Supply is Greater than total Supply\");\r\n                setButtonThree(\"Mint With Busd\");\r\n              }\r\n              // }\r\n              // else {\r\n              //     totalMintingPriceBusd = web3.utils.toWei(totalMintingPriceBusd.toString())\r\n              //     await busdContractOf.methods.approve(wireNftContractAddress, totalMintingPriceBusd).send({\r\n              //         from: acc\r\n              //     })\r\n\r\n              //     let hash = await nftContractOf.methods.mint_with_BUSD(value, totalMintingPriceBusd).send({\r\n              //         from: acc,\r\n              //     })\r\n              //     toast.success(\"Transaction Confirmed\")\r\n\r\n              //     hash = hash.transactionHash\r\n              //     let postapi = await axios.post('https://whenftapi.herokuapp.com/buynfttoken', {\r\n              //         \"uid\": inputdatahere,\r\n              //         \"address\": acc,\r\n              //         \"nft\": value,\r\n              //         \"token\": totalMintingPriceBusd,\r\n              //         \"txn\": \"xsdd44\"\r\n              //     })\r\n\r\n              //     // console.log(\"postapi\", postapi);\r\n              //     toast.success(\"Success\", postapi.data.data)\r\n\r\n              //     setButtonThree(\"Mint With Busd\")\r\n              //     setinputdatahere(\" \")\r\n\r\n              // }\r\n            }\r\n          } catch (e) {\r\n            console.log(\"Error while minting \", e);\r\n            toast.error(\"Transaction failed BUSD\");\r\n            setButtonThree(\"Mint With Busd\");\r\n          }\r\n        } else {\r\n          toast.error(\"User Is Not Exists\");\r\n          setinputdatahere(\" \");\r\n        }\r\n      } catch (e) {\r\n        console.log(\"User Is Not Exists\", e);\r\n        toast.error(\"Error While Fatching Get API\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const getMydata = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      let nftContractOf = new web3.eth.Contract(\r\n        ULE_NFT_10000_ABI,\r\n        ULE_NFT_10000\r\n      );\r\n      let mintingBusdPrice = await nftContractOf.methods\r\n        .MinitngPricein_token()\r\n        .call();\r\n      // mintingBusdPrice = web3.utils.fromWei(mintingBusdPrice);\r\n      mintingBusdPrice = parseFloat(mintingBusdPrice);\r\n      setMintPriceBUSD(mintingBusdPrice);\r\n\r\n      // let mintingWirePrice = await nftContractOf.methods.ValueinULE().call()\r\n      // mintingWirePrice = web3.utils.fromWei(mintingWirePrice)\r\n      // mintingWirePrice = parseFloat(mintingWirePrice).toFixed(1)\r\n      let mintingWirePrice = await axios.get(\r\n        \"https://ule-nft-api-1.herokuapp.com/100UsdInUle?id=1\"\r\n      );\r\n      mintingWirePrice = parseFloat(mintingWirePrice.data.data * 100).toFixed(\r\n        1\r\n      );\r\n      console.log(\"10000\", mintingWirePrice);\r\n      setmintPriceWire(mintingWirePrice);\r\n\r\n      let mintingbnbPrice = await nftContractOf.methods.Valueinbnb().call();\r\n      // mintingbnbPrice = mintingbnbPrice[0]\r\n\r\n      mintingbnbPrice = web3.utils.fromWei(mintingbnbPrice);\r\n      // console.log(\"mintingbnbPrice\", mintingbnbPrice);\r\n      mintingbnbPrice = parseFloat(mintingbnbPrice).toFixed(4);\r\n      setMintPriceBnb(mintingbnbPrice);\r\n    } catch (e) {\r\n      console.log(\"Error while getting minting Price\", e);\r\n    }\r\n  };\r\n\r\n  const Sponser = () => {\r\n    setShowModal(true);\r\n    if (showModal == true) {\r\n    }\r\n  };\r\n  const Sponser2 = () => {\r\n    setShowModal2(true);\r\n  };\r\n  const Sponser3 = () => {\r\n    setShowModal3(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      getMydata();\r\n    }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"breadcrumb-area\">\r\n        <div className=\"second_img\">\r\n          <div class=\"container h-100\">\r\n            <div class=\"row h-100 align-items-center justify-content-center\">\r\n              <div class=\"col-lg-5\">\r\n                <div class=\"breadcrumb-title text-center\">\r\n                  <h2>Mint</h2>\r\n                  <ul class=\"breadcrumb-list\">\r\n                    <li>Home</li>\r\n                    <li>\r\n                      <i class=\"fas fa-angle-double-right\"></i>\r\n                    </li>\r\n                    <li>Mint</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mint2\">\r\n        <div className=\"container\">\r\n          <h1>MINT WITH 10000 USD</h1>\r\n\r\n          <div className=\"row mt-5\">\r\n            <div className=\"\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <div class=\"mint-image welcome-thumb mb-50 item\">\r\n                    <img src=\"nft_img copy.jpg\" alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <div className=\"mint-content\">\r\n                    <div className=\"mint-item\">\r\n                      <div className=\"quantity\">\r\n                        {/* <div className=\"\">\r\n                                                    <button className=\"btn count-form\" type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} id=\"qtyBox\" >1\r\n                                                        </button>\r\n\r\n                                                </div> */}\r\n\r\n                        <div className=\"top_div_here\">\r\n                          <input\r\n                            className=\"bcs\"\r\n                            type=\"number\"\r\n                            name=\"number\"\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            value={value}\r\n                          ></input>\r\n\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box \" onClick={() => myMintBNB()}>\r\n                                                            <span className=\"\">{btnOne}</span>\r\n                                                        </a>\r\n\r\n                                                        <p className=\"fs-4 ms-4 text-white\">Price : {mintPriceBnb} BNB</p>\r\n                                                    </div> */}\r\n                          <div className=\"btn-area1 mt-5\">\r\n                            <a class=\"btn btn-box\" onClick={() => myMintWire()}>\r\n                              {btnTwo}\r\n                            </a>\r\n                            <p\r\n                              className=\"fs-4 text-white\"\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                            >\r\n                              Price : {mintPriceWire} YULE\r\n                            </p>\r\n                          </div>\r\n                          {/* <div className=\"btn-area1 mt-5\">\r\n                                                        <a class=\"btn btn-box\" onClick={() => myMintBUSD()}>\r\n                                                            {btnThree}\r\n                                                        </a>\r\n                                                        <p className=\"fs-4 text-white\">Price : {mintPriceBUSD} BUSD</p>\r\n                                                    </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport Front from \"./Components/Front/Front\";\r\nimport Front2 from \"./Components/Front2/Front2\";\r\n// import Front3 from \"./Components/Front3/Front3\";\r\nimport Front4 from \"./Components/Front4/Front4\";\r\nimport Mint from \"./Components/Mint/Mint\";\r\nimport Crypto from \"./Components/Crypto/Crypto\";\r\nimport Road from \"./Components/Road/Road\";\r\nimport Slide from \"./Components/Slide/Slide\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport Index_main from \"./Components/Index_main\";\r\nimport About_main from \"./Components/About_main\";\r\nimport Collection_main from \"./Components/Collection_main\";\r\nimport Benefits_main from \"./Components/Benefits_main\";\r\n// import Road_main from \"./Components/Road_main\";\r\nimport Mint_main from \"./Components/Mint_main\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Terms from \"./Components/Terms/Terms\";\r\nimport Privacy_Policy from \"./Components/Privacy_Policy/Privacy_Policy\";\r\nimport ModelOpen from \"./Components/Mint/ModelOpen\";\r\nimport BSC_Minting from \"./Components/BSC_Minting\";\r\nimport Main_polygon from \"./Components/Main_polygon\";\r\nimport Mint_polygon from \"./Components/Mint_Polygon/Mint_polygon\";\r\nimport Mint_With_100 from \"./Components/Mint_Deatails/Mint_With_100\";\r\nimport Mint_With_200 from \"./Components/Mint_Deatails/Mint_With_200\";\r\nimport Mint_With_300 from \"./Components/Mint_Deatails/Mint_With_300\";\r\nimport Mint_With_400 from \"./Components/Mint_Deatails/Mint_With_400\";\r\nimport Mint_With_500 from \"./Components/Mint_Deatails/Mint_With_500\";\r\nimport Mint_With_1000 from \"./Components/Mint_Deatails/Mint_With_1000\";\r\nimport Mint_With_2000 from \"./Components/Mint_Deatails/Mint_With_2000\";\r\nimport Mint_With_3000 from \"./Components/Mint_Deatails/Mint_With_3000\";\r\nimport Mint_With_4000 from \"./Components/Mint_Deatails/Mint_With_4000\";\r\nimport Mint_With_5000 from \"./Components/Mint_Deatails/Mint_With_5000\";\r\nimport Mint_With_10000 from \"./Components/Mint_Deatails/Mint_With_10000\";\r\n\r\n\r\nfunction App() {\r\nconst [modalShow, setModalShow] = useState(false);\r\nconst [chainid, setchainid] = useState(false);\r\n\r\n\r\nfunction value(myvalue){\r\n  console.log('my value is',myvalue)\r\n\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header  setchainid={setchainid} />\r\n        <ModelOpen setModalShow={setModalShow} modalShow={modalShow} value={value} />\r\n        <ToastContainer />\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Index_main chainid={chainid} />} />\r\n          {/* <Route exact path=\"/About_main\" element={<About_main />} />   */}\r\n          <Route exact path=\"/Collection_main\" element={<Collection_main />} />\r\n          <Route exact path=\"/Benefits_main\" element={<Benefits_main />} />\r\n          {/* <Route exact path=\"/Road_main\" element={<Road_main />} /> */}\r\n          <Route exact path=\"/Mint_main\" element={<BSC_Minting  />} />\r\n          <Route exact path=\"/Terms_main\" element={<Terms />} />\r\n          <Route exact path=\"/Privacy_Policy\" element={<Privacy_Policy />} />\r\n          <Route exact path=\"/Minting_With_BSC\" element={<Mint_main />} />\r\n          {/* <Route exact path=\"/Main_polygon\" element={<Main_polygon />} /> */}\r\n          <Route exact path=\"/Mint\" element={<Mint />} />\r\n          <Route exact path=\"/Mint_With_100\" element={<Mint_With_100 />} />\r\n          <Route exact path=\"/Mint_With_200\" element={<Mint_With_200 />} />\r\n          <Route exact path=\"/Mint_With_300\" element={<Mint_With_300 />} />\r\n\r\n          <Route exact path=\"/Mint_With_400\" element={<Mint_With_400 />} />\r\n\r\n          <Route exact path=\"/Mint_With_500\" element={<Mint_With_500 />} />\r\n\r\n          <Route exact path=\"/Mint_With_1000\" element={<Mint_With_1000 />} />\r\n\r\n          <Route exact path=\"/Mint_With_2000\" element={<Mint_With_2000 />} />\r\n\r\n          <Route exact path=\"/Mint_With_3000\" element={<Mint_With_3000 />} />\r\n\r\n          <Route exact path=\"/Mint_With_4000\" element={<Mint_With_4000 />} />\r\n\r\n          <Route exact path=\"/Mint_With_5000\" element={<Mint_With_5000 />} />\r\n          <Route exact path=\"/Mint_With_10000\" element={<Mint_With_10000 />} />\r\n\r\n\r\n\r\n\r\n          {/* <Route exact path=\"/Mint_polygon\" element={<Mint_polygon />} /> */}\r\n\r\n\r\n\r\n        </Routes>\r\n       \r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}